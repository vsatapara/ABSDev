CREATE OR REPLACE PROCEDURE abs_mdi."QUOTE_MANAGEMENT" (
    ProjectId IN NUMBER,
    ProjectName IN Varchar2,
    UserId IN Varchar2,
    OutputId OUT number) AS
NewBuildingInformationId number;
NewGirtSpacingId number;
NewGirtBaySpaceId number;
NewGuid RAW(50);
NewEndWallID number;
NewBracingId number;
NewPartitionId number;
UserDetailId Number;
Total NUMBER;
BEGIN
    select "UserDetailId" into UserDetailId from "USR_UserDetail" where "UserId" = UserId and rownum=1 and "IsDelete"='N';
    INSERT INTO "Project"(
			"ProjectName",
			"IsActive",
			"IsDelete",
			"CreatedDate",
			"BuildingsCount",
			"BuildingLocation",
			"ProjectStatusId",
			"ExpiryDate",
			"Price",
			"UserId",
			"CreatedBy",
			"IpAddress",
			"ProjectUseId",
			"RiskCategoryId",
			"CityLimit",
			"MaterialOriginId",
			"Address1",
			"Address2",
			"City",
			"Region",
			"State",
			"Country",
			"ZipPostalCode",
			"QuoteRequestDate",
			"PriceStatus",
			"Latitude",
			"Longitude",
			"DesignCodeId",
			"DesignCodeName",
			"ProjectUseCategoryid",
			"WindSpeed",
			"WindExposureId",
			"IsHurricaneCoastline",
			"LiveLoad",
			"IsLiveLoadReductionAllowed",
			"GroundSnow",
			"SnowExposureId",
			"MinimumSnowLoad",
			"Elevation",
			"RainIntensity",
			"SustainablilityGoalId",
			"IsClimateControlled",
			"EnergyEfficiencyId",
			"IsAirInfiltrationRequired",
			"CustomerNo",
			"SeismicSa",
			"SeismicS1",
			"SeismicSnowLoad",
			"SeismicSnowPercentage",
			"SiteClassId",
			"InputDimensional",
			"InputEngineering",
			"OutputDimensional",
			"OutputEngineering",
			"CurrencyDimensional",
			"IsCanadaBasedDesignCode",
			"IsDesignCodeIbc2012Based",
			"RainLoad",
			"SeismicSa1Dot0",
			"SeismicSa2Dot0",
			"WindLoad",
			"IsUserDefinedSustainability",
			"UserDefinedSustainability",
			"CompanyId",
			"CBBInquiryNumber",
			"MinAnchorRodDiameter",
			"TDIRequired",
			"UsingSystemGeneratedRodPlan",
			"EnteredBy",
			"ProjectBuildingType",
			"UserRoleId",
			"ProjectStage",
			"IsArchive",
			"UserType",
			"IsProjectPriced",
			"PriceDate",
			"ProjectPriceDataPath",
			"ExportedToOEDate",
			"ExportToEDSDate",
			"ReportPath",
			"CADDrawingPath",
			"JobNumber",
			"Ignore_ufc",
			"Warn_hot_dipped",
			"RequestShipDate",
			"ConstructionDate",
			"AnchorRodDate",
			"SubmittedDate",
			"PGASeismic",
			"IsOverrideSeismicSa",
			"IsOverrideSeismicS1",
			"IsOverrideSeismicSa1Dot0",
			"IsOverrideSeismicSa2Dot0",
			"IsOverrideWindSpeed",
			"IsOverrideWindLoad",
			"IsOverrideLiveLoad",
			"IsOverrideGroundSnow",
			"IsOverrideRainIntensity",
			"IsOverrideRainLoad",
			"IsOverridePGASeismic",
			"WindLoadType",
            "FinalAnchorRodDate",
            "ApprovalDate",
            "PermitDate",
            "FinalDate",
            "IsCorpEngineers",
            "IsUFCAntiTerrorism",
            "UFCAntiTerrorismListWeight",
            "UFCAntiTerrorismListPrice",
            "Mailed",
            "Carrier",
            "Account",
            "ExpiresOn")
  VALUES(ProjectName,
		(SELECT "IsActive" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsDelete" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		CURRENT_TIMESTAMP,
		(SELECT "BuildingsCount" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "BuildingLocation" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "ProjectStatusId" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "ExpiryDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "Price" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		UserId,
		(SELECT "CreatedBy" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IpAddress" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "ProjectUseId" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "RiskCategoryId" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "CityLimit" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "MaterialOriginId" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "Address1" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "Address2" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "City" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "Region" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "State" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "Country" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "ZipPostalCode" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "QuoteRequestDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        --TO_DATE((SELECT "QuoteRequestDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId), 'DD/MM/YYYY'),
		(SELECT "PriceStatus" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "Latitude" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "Longitude" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "DesignCodeId" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "DesignCodeName" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "ProjectUseCategoryid" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "WindSpeed" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "WindExposureId" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsHurricaneCoastline" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "LiveLoad" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsLiveLoadReductionAllowed" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "GroundSnow" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "SnowExposureId" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "MinimumSnowLoad" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "Elevation" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "RainIntensity" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "SustainablilityGoalId" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsClimateControlled" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "EnergyEfficiencyId" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsAirInfiltrationRequired" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "CustomerNo" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "SeismicSa" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "SeismicS1" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "SeismicSnowLoad" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "SeismicSnowPercentage" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "SiteClassId" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "InputDimensional" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "InputEngineering" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "OutputDimensional" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "OutputEngineering" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "CurrencyDimensional" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsCanadaBasedDesignCode" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsDesignCodeIbc2012Based" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "RainLoad" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "SeismicSa1Dot0" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "SeismicSa2Dot0" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "WindLoad" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsUserDefinedSustainability" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "UserDefinedSustainability" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "CompanyId" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "CBBInquiryNumber" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "MinAnchorRodDiameter" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "TDIRequired" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "UsingSystemGeneratedRodPlan" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "EnteredBy" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "ProjectBuildingType" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "UserRoleId" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "ProjectStage" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsArchive" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "UserType" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsProjectPriced" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "PriceDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "ProjectPriceDataPath" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "ExportedToOEDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "ExportToEDSDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "ReportPath" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "CADDrawingPath" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "JobNumber" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "Ignore_ufc" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "Warn_hot_dipped" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "RequestShipDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "ConstructionDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "AnchorRodDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "SubmittedDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "PGASeismic" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsOverrideSeismicSa" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsOverrideSeismicS1" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsOverrideSeismicSa1Dot0" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsOverrideSeismicSa2Dot0" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsOverrideWindSpeed" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsOverrideWindLoad" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsOverrideLiveLoad" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsOverrideGroundSnow" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsOverrideRainIntensity" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsOverrideRainLoad" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "IsOverridePGASeismic" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
		(SELECT "WindLoadType" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        (SELECT "FinalAnchorRodDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        (SELECT "ApprovalDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        (SELECT "PermitDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        (SELECT "FinalDate" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        (SELECT "IsCorpEngineers" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        (SELECT "IsUFCAntiTerrorism" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        (SELECT "UFCAntiTerrorismListWeight" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        (SELECT "UFCAntiTerrorismListPrice" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        (SELECT "Mailed" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        (SELECT "Carrier" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        (SELECT "Account" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId),
        (SELECT "ExpiresOn" FROM "Project" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId)) returning "ProjectId" into OutputId;
	INSERT INTO "Purchaser"(
        "PurchaserName",
        "Contact",
        "Country",
        "State",
        "City",
        "County",
        "Address1",
        "Address2",
        "ZipCode",
        "EmailAddress",
        "PhoneNumber",
        "OvernightCountry",
        "OvernightState",
        "OvernightCity",
        "OvernightCounty",
        "OvernightAddress1",
        "OvernightAddress2",
        "OvernightZipCode",
        "FederalTaxIDNumber",
        "CecoErection",
        "SellerFurnish",
        "SellerErect",
        "FaxNumber",
        "BuyerNumber",
        "BuyerName",
        "BuyerCareOf",
        "BuyerCountry",
        "BuyerIntSite",
        "BuyerState",
        "BuyerCounty",
        "BuyerAddress",
        "BuyerCity",
        "BuyerZipCode",
        "BuyerMailCountry",
        "BuyerMailIntSite",
        "BuyerMailState",
        "BuyerMailCounty",
        "BuyerMailAddress",
        "BuyerMailCity",
        "BuyerMailZipCode",
        "BuyerContactName",
        "BuyerEmail1",
        "BuyerEmail2",
        "BuyerDayPhone",
        "BuyerFaxNumber",
        "BuyerNightPhone",
        "BuyerMobileNumber",
        "CreatedBy",
        "CreatedDate",
        "IpAddress",
        "IsDelete",
        "ProjectId",
        "ManagerName")
	SELECT
		"PurchaserName",
		"Contact",
		"Country",
		"State",
		"City",
		"County",
		"Address1",
		"Address2",
		"ZipCode",
		"EmailAddress",
		"PhoneNumber",
		"OvernightCountry",
		"OvernightState",
		"OvernightCity",
		"OvernightCounty",
		"OvernightAddress1",
		"OvernightAddress2",
		"OvernightZipCode",
		"FederalTaxIDNumber",
		"CecoErection",
		"SellerFurnish",
		"SellerErect",
		"FaxNumber",
		"BuyerNumber",
		"BuyerName",
		"BuyerCareOf",
		"BuyerCountry",
		"BuyerIntSite",
		"BuyerState",
		"BuyerCounty",
		"BuyerAddress",
		"BuyerCity",
		"BuyerZipCode",
		"BuyerMailCountry",
		"BuyerMailIntSite",
		"BuyerMailState",
		"BuyerMailCounty",
		"BuyerMailAddress",
		"BuyerMailCity",
		"BuyerMailZipCode",
		"BuyerContactName",
		"BuyerEmail1",
		"BuyerEmail2",
		"BuyerDayPhone",
		"BuyerFaxNumber",
		"BuyerNightPhone",
		"BuyerMobileNumber",
		UserDetailId,
		CURRENT_TIMESTAMP,
		"IpAddress",
		"IsDelete",
		OutputId,
		"ManagerName"
	FROM "Purchaser"
    WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId;
    INSERT INTO "EDSPrice_I_Owner"(
		"ProjectId",
		"BuildingOwner",
		"Attention",
		"Country",
		"State",
		"County",
		"City",
		"Address1",
		"Address2",
		"ZipCode",
		"BusinessName",
		"EndUseOfBuilding",
		"LeadSource",
		"InternationalSite",
		"ProjectNumber",
		"PhoneNumber",
		naics,
		"SubmittalPackage",
		"OverrideIncompletePrice",
		"CrmOpportunityNumber",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDeleted") 
   	SELECT
		OutputId,
		"BuildingOwner",
		"Attention",
		"Country",
		"State",
		"County",
		"City",
		"Address1",
		"Address2",
		"ZipCode",
		"BusinessName",
		"EndUseOfBuilding",
		"LeadSource",
		"InternationalSite",
		"ProjectNumber",
		"PhoneNumber",
		naics,
		"SubmittalPackage",
		"OverrideIncompletePrice",
		"CrmOpportunityNumber",
		UserDetailId,
        CURRENT_TIMESTAMP,
		"IpAddress",
		"IsDeleted"
	FROM "EDSPrice_I_Owner"
    WHERE NVL("IsDeleted", 'N') = 'N' AND "ProjectId" = ProjectId;
   INSERT INTO "I_Address"(
		"ProjectId",
		"Address1",
		"Address2",
		"Country",
		"State",
		"County",
		"City",
		"ZipCode",
		"Longitude",
		"Latitude",
		"CreatedBy",
		"CreatedDate",
		"IsDelete",
		"IpAddress",
		"AddressType")
	SELECT
		OutputId,
		"Address1",
		"Address2",
		"Country",
		"State",
		"County",
		"City",
		"ZipCode",
		"Longitude",
		"Latitude",
		UserDetailId,
		CURRENT_TIMESTAMP,
		"IsDelete",
		"IpAddress",
		"AddressType"
	FROM "I_Address"
    WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId;
    INSERT INTO "Shipping"(
		"ProjectId",
		"ShippingPointId",
		"ShippingTerms",
		"ShippingContact",
		"Notification",
		"DayPhone",
		"NightPhone",
		"FreightTerms",
		"FreightExpense",
		"Carrier",
		"Country",
		"State",
		"County",
		"City",
		"Address1",
		"Address2",
		"ZipCode",
		"Latitude",
		"Longitude",
		"RequestedDeliveryDate",
		"Miles1",
		"Miles2",
		"Miles3",
		"Rate1",
		"Rate2",
		"Rate3",
		"NumberLoads1",
		"NumberLoads2",
		"NumberLoads3",
		"TruckTarps",
		"CopyFlag",
		"AddIMPOverages",
		"AddExportOverages",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDeleted",
		"InternationalSite")
    SELECT
		OutputId,
		"ShippingPointId",
		"ShippingTerms",
		"ShippingContact",
		"Notification",
		"DayPhone",
		"NightPhone",
		"FreightTerms",
		"FreightExpense",
		"Carrier",
		"Country",
		"State",
		"County",
		"City",
		"Address1",
		"Address2",
		"ZipCode",
		"Latitude",
		"Longitude",
		"RequestedDeliveryDate",
		"Miles1",
		"Miles2",
		"Miles3",
		"Rate1",
		"Rate2",
		"Rate3",
		"NumberLoads1",
		"NumberLoads2",
		"NumberLoads3",
		"TruckTarps",
		"CopyFlag",
		"AddIMPOverages",
		"AddExportOverages",
		UserDetailId,
		CURRENT_TIMESTAMP,
		"IpAddress",
		"IsDeleted",
		"InternationalSite"
	FROM "Shipping"
    WHERE NVL("IsDeleted", 'N') = 'N' AND "ProjectId" = ProjectId;
	INSERT INTO "EDSPrice_I_Payment"(
		"AuthorizedSignature",
		"OrderedBy",
		"BuilderPO",
		"CreditTerms",
		"Bank",
		"Teller",
		"TaxExemptStatus",
		"TaxExemptNumber",
		"TaxIncluded",
		"Multiplier",
		"ProjectNumber",
		"IMPOverage",
		"ClarificationDayPhone",
		"MultiplierAuthorization",
		"GCName",
		"GCState",
		"GCCity",
		"ErectorName",
		"ErectorState",
		"ErectorCity",
		"LenderName",
		"LenderState",
		"LenderCity",
		"LenderAddress",
		"LenderZipcode",
		"LenderPhone",
		"LenderAddress2",
		"IMPFreightPerBuilding",
		"ValidUntil",
		"DateAuthorized",
		"MultiplierBWXGenerated",
		"MultiplierStart",
		"MultiplierTarget",
		"MultiplierFloor",
		"MultiplierRequested",
		"MultiplierSuggested",
		"ProjectGuid",
		"ProjectFile",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDeleted",
		"ProjectId",
		gccountry,
		erectorcountry,
		lendercountry,
		"EstimatorInitials")
    SELECT
		"AuthorizedSignature",
		"OrderedBy",
		"BuilderPO",
		"CreditTerms",
		"Bank",
		"Teller",
		"TaxExemptStatus",
		"TaxExemptNumber",
		"TaxIncluded",
		"Multiplier",
		"ProjectNumber",
		"IMPOverage",
		"ClarificationDayPhone",
		"MultiplierAuthorization",
		"GCName",
		"GCState",
		"GCCity",
		"ErectorName",
		"ErectorState",
		"ErectorCity",
		"LenderName",
		"LenderState",
		"LenderCity",
		"LenderAddress",
		"LenderZipcode",
		"LenderPhone",
		"LenderAddress2",
		"IMPFreightPerBuilding",
		"ValidUntil",
		"DateAuthorized",
		"MultiplierBWXGenerated",
		"MultiplierStart",
		"MultiplierTarget",
		"MultiplierFloor",
		"MultiplierRequested",
		"MultiplierSuggested",
		"ProjectGuid",
		"ProjectFile",
		UserDetailId,
		CURRENT_TIMESTAMP,
		"IpAddress",
		"IsDeleted",
		OutputId,
		gccountry,
		erectorcountry,
		lendercountry,
		"EstimatorInitials"
	FROM "EDSPrice_I_Payment"
    WHERE NVL("IsDeleted", 'N') = 'N' AND "ProjectId" = ProjectId;
    INSERT INTO "Drawings"(
        "Quantity",
        "Type",
        "Purpose",
        "Seal",
        "Enhanced",
        "Country",
        "State",
        "InternationalSite",
        "ShipTo",
        "MinQuantity",
        "DrawingSize",
        "CreatedBy",
        "CreatedDate",
        "ModifiedBy",
        "ModifiedDate",
        "IpAddress",
        "IsDeleted",
        "ProjectId")
    SELECT       
        "Quantity",
        "Type",
        "Purpose",
        "Seal",
        "Enhanced",
        "Country",
        "State",
        "InternationalSite",
        "ShipTo",
        "MinQuantity",
        "DrawingSize",
        "CreatedBy",
        "CreatedDate",
        "ModifiedBy",
        "ModifiedDate",
        "IpAddress",
        "IsDeleted",
        OutputId
    FROM
        "Drawings"
    WHERE NVL("IsDeleted", 'N') = 'N' AND "ProjectId" = ProjectId;
     
    INSERT INTO "Drawing_SubmittalPackage"(
        "Description",
        "Quantity",
        "Price",
        "ProjectId",
        "CreatedDate",
        "CreatedBy",
        "ModifiedDate",
        "ModifiedBy",
        "IsDelete")
     SELECT
        "Description",
        "Quantity",
        "Price",
        OutputId,
        "CreatedDate",
        "CreatedBy",
        "ModifiedDate",
        "ModifiedBy",
        "IsDelete"
    FROM
        "Drawing_SubmittalPackage"
    WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = ProjectId;
    
DECLARE
  CURSOR c_quote
  IS
    SELECT
    "b1"."ProjectId" "ProjectId",
    "b1"."BuildingInformationId" "BuildingInformationId",
    "b1"."BuildingType" "BuildingType"
FROM
    "BuildingInformation" "b1"
WHERE
    "b1"."ProjectId" = ProjectId AND NVL("b1"."IsDelete", 'N') = 'N' order by "b1"."BuildingInformationId";
BEGIN
  FOR r_product IN c_quote
  LOOP
  DECLARE x_1 number; x_2 number; x_3 VARCHAR2(1);
  BEGIN
        SELECT r_product."ProjectId", r_product."BuildingInformationId", r_product."BuildingType"  INTO x_1, x_2, x_3 FROM dual;
	INSERT INTO "BuildingInformation"(
		"BuildingLabel",
		"Structure",
		"BuildingName",
		"BuildingType",
		"Elevation",
		"FrameType",
		"ProjectId",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"AttachmentElevation",
		"HighSideWallElevation",
		"ParentBuildingId",
		"BuildingHasInsulation",
		"InsulationByBrand",
		"ComCheck",
		"IsComplete",
		"UseSeismicDesignCategory")
    VALUES((SELECT "BuildingLabel" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		(SELECT "Structure" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		(SELECT "BuildingName" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		(SELECT "BuildingType" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		(SELECT "Elevation" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		(SELECT "FrameType" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		OutputId,
		UserDetailId,
		CURRENT_TIMESTAMP,
		(SELECT "IpAddress" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		(SELECT "IsDelete" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		(SELECT "AttachmentElevation" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		(SELECT "HighSideWallElevation" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
        CASE x_3 when 'A' then NewBuildingInformationId else (SELECT "ParentBuildingId" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2) end,
		(SELECT "BuildingHasInsulation" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		(SELECT "InsulationByBrand" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		(SELECT "ComCheck" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		(SELECT "IsComplete" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2),
		(SELECT "UseSeismicDesignCategory" FROM "BuildingInformation" WHERE NVL("IsDelete", 'N') = 'N' AND "ProjectId" = x_1 AND "BuildingInformationId" = x_2)) returning "BuildingInformationId" into NewBuildingInformationId;
    INSERT INTO "GeometryInformation"(
		"BuildingInformationId",
		"BuildingWidth",
		"BuildingLength",
		"DistanceToRidgeSideWallB",
		"DistanceToRidgeSideWallD",
		"DistanceToRidgeSideWallA",
		"DistanceToRidgeSideWallC",
		"EaveHeightSideWallB",
		"EaveHeightSideWallD",
		"RoofSlopeSideWallB",
		"RoofSlopeSideWallD",
		"EaveHeightSideWallA",
		"EaveHeightSideWallC",
		"RoofSlopeSideWallA",
		"RoofSlopeSideWallC",
		"Swa",
		"Swb",
		"CreatedBy",
		"CreatedDate",
		"Category",
		"CurrentBuilding",
		"AvailableBuilding",
		"Elevation",
		"XDistance",
		"YDistance",
		"OffsetDistance",
		"StartColumn",
		"StopColumn",
		"XDirection",
		"YDirection",
		"AttachmentOffset",
		"PeakHeight",
		"WindEnclosure",
		"AccessoryEnclosure",
		"OAEnclosure",
		"XCoordinate",
		"YCoordinate",
		"IsDeleted")
    SELECT
		NewBuildingInformationId,
		gi."BuildingWidth",
		gi."BuildingLength",
		gi."DistanceToRidgeSideWallB",
		gi."DistanceToRidgeSideWallD",
		gi."DistanceToRidgeSideWallA",
		gi."DistanceToRidgeSideWallC",
		gi."EaveHeightSideWallB",
		gi."EaveHeightSideWallD",
		gi."RoofSlopeSideWallB",
		gi."RoofSlopeSideWallD",
		gi."EaveHeightSideWallA",
		gi."EaveHeightSideWallC",
		gi."RoofSlopeSideWallA",
		gi."RoofSlopeSideWallC",
		gi."Swa",
		gi."Swb",
		UserDetailId,
		CURRENT_TIMESTAMP,
		gi."Category",
		gi."CurrentBuilding",
		gi."AvailableBuilding",
		gi."Elevation",
		gi."XDistance",
		gi."YDistance",
		gi."OffsetDistance",
		gi."StartColumn",
		gi."StopColumn",
		gi."XDirection",
		gi."YDirection",
		gi."AttachmentOffset",
		gi."PeakHeight",
		gi."WindEnclosure",
		gi."AccessoryEnclosure",
		gi."OAEnclosure",
		gi."XCoordinate",
		gi."YCoordinate",
		gi."IsDeleted"
	FROM "GeometryInformation" gi
    WHERE NVL("IsDeleted", 'N') = 'N' AND gi."BuildingInformationId" = x_2;

DECLARE
  CURSOR c_quote6
  IS
    SELECT
    "igbs6"."GirtSpacingId"
FROM
    "Input_GirtsBaySpacing" "igbs6"
WHERE
    "igbs6"."BuildingInformationId" = x_2;
BEGIN
  FOR r_product6 IN c_quote6
  LOOP
  DECLARE y_6 number;
  BEGIN
        SELECT r_product6."GirtSpacingId"  INTO y_6 FROM dual;    
	INSERT INTO "Input_GirtsBaySpacing"(
		"BuildingInformationId",
		"SW1Style",
		"SW2Style",
		"EW1Style",
		"EW2Style",
		"RoofPurlinStyle",
		"SW1Depth",
		"SW2Depth",
		"EW1Depth",
		"EW2Depth",
		"RoofPurlinDepth",
		"SW1Optimize",
		"SW2Optimize",
		"EW1Optimize",
		"EW2Optimize",
		"RoofPurlinOptimize",
		"RoofBaySpacing",
		"WallBaySpacing",
		"GirtSpacing",
		"PurlinSpacing",
		"LBPMinDepth",
		"LBPMaxDepth",
		"CreatedBy",
		"CreatedDate",
		"IsDelete",
		"IpAddress",
		"FrameBoltWashers",
		"GrayPrimer",
		"OptimizeGirt1",
		"OptimizeGirt2",
		"OptimizePurlin",
		"GirtWidth1",
		"GirtWidth2",
		"PurlinWidth",
		"PortalRafterDepth1",
		"PortalRafterDepth2",
		"PortalColumnDepth1",
		"PortalColumnDepth2",
		"LBPBracingLoc")
    VALUES( 
		NewBuildingInformationId,
		(SELECT igbs."SW1Style" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."SW2Style" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."EW1Style" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."EW2Style" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."RoofPurlinStyle" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."SW1Depth" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."SW2Depth" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."EW1Depth" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."EW2Depth" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."RoofPurlinDepth" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."SW1Optimize" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."SW2Optimize" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."EW1Optimize" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."EW2Optimize" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."RoofPurlinOptimize" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."RoofBaySpacing" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."WallBaySpacing" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."GirtSpacing" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."PurlinSpacing" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."LBPMinDepth" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."LBPMaxDepth" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		UserDetailId,
		CURRENT_TIMESTAMP,
		(SELECT igbs."IsDelete" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."IpAddress" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."FrameBoltWashers" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."GrayPrimer" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."OptimizeGirt1" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."OptimizeGirt2" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."OptimizePurlin" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."GirtWidth1" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."GirtWidth2" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."PurlinWidth" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."PortalRafterDepth1" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."PortalRafterDepth2" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."PortalColumnDepth1" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."PortalColumnDepth2" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6),
		(SELECT igbs."LBPBracingLoc" FROM "Input_GirtsBaySpacing" igbs WHERE NVL("IsDelete", 'N') = 'N' AND "GirtSpacingId" = y_6)) returning "GirtSpacingId" into NewGirtSpacingId;
	INSERT INTO "Input_Bays"(
		"BuildingInformationId",
		"Elevation",
		"BayNumber",
		"Width")
	SELECT
		NewBuildingInformationId,
		ib."Elevation",
		ib."BayNumber",
		ib."Width"
	FROM "Input_Bays" ib
    WHERE ib."BuildingInformationId" = x_2;

DECLARE
  CURSOR c_quote1
  IS
    SELECT
    "igbsg1"."GirtBaySpaceId"
FROM
    "Input_GirtsBaySpacing_Girt" "igbsg1"
WHERE
    "igbsg1"."GirtSpacingId" = y_6;
BEGIN
  FOR r_product1 IN c_quote1
  LOOP
  DECLARE y_1 number;
  BEGIN
        SELECT r_product1."GirtBaySpaceId"  INTO y_1 FROM dual;
	INSERT INTO "Input_GirtsBaySpacing_Girt"(
		"GirtSpacingId",
		"SW1Type",
		"SW2Type",
		"EW1Type",
		"EW2Type")
    VALUES   
		(NewGirtSpacingId,
		(SELECT igbsg."SW1Type" FROM "Input_GirtsBaySpacing_Girt" igbsg WHERE "GirtBaySpaceId" = y_1),
		(SELECT igbsg."SW2Type" FROM "Input_GirtsBaySpacing_Girt" igbsg WHERE "GirtBaySpaceId" = y_1),
		(SELECT igbsg."EW1Type" FROM "Input_GirtsBaySpacing_Girt" igbsg WHERE "GirtBaySpaceId" = y_1),
		(SELECT igbsg."EW2Type" FROM "Input_GirtsBaySpacing_Girt" igbsg WHERE "GirtBaySpaceId" = y_1)) returning "GirtBaySpaceId" INTO NewGirtBaySpaceId;

		DECLARE
		CURSOR c_quote2
		IS
			SELECT
			"igbsgs1"."GirtSpecifiedId"
		FROM
			"Input_GirtsBaySpacing_GirtSpecified" "igbsgs1"
		WHERE
			"igbsgs1"."GirtBaySpaceId" = y_1;
		BEGIN
		FOR r_product2 IN c_quote2
		LOOP
		DECLARE z_1 number;
		BEGIN
				SELECT r_product2."GirtSpecifiedId" INTO z_1 FROM dual;
	INSERT INTO "Input_GirtsBaySpacing_GirtSpecified"(
		"GirtBaySpaceId",
		"Elevation",
		"SpacingNumber",
		"Spacing",
		"Type")
    SELECT 
		NewGirtBaySpaceId,
		igbsgs."Elevation",
		igbsgs."SpacingNumber",
		igbsgs."Spacing",
		igbsgs."Type"
	FROM "Input_GirtsBaySpacing_GirtSpecified" igbsgs
    WHERE "GirtSpecifiedId" = z_1;
    END;
  END LOOP;
END;
	INSERT INTO "Input_GirtsBaySpacing_Purlin"(
		"GirtSpacingId",
		"NominalSpacing",
		"OnSlope")
	SELECT
		NewGirtSpacingId,
		igbsp."NominalSpacing",
		igbsp."OnSlope"
	FROM "Input_GirtsBaySpacing_Purlin" igbsp
    WHERE "GirtSpacingId" = y_6;
	INSERT INTO "Input_GirtsBaySpacing_Wall"(
		"GirtSpacingId",
		"Elevation",
		"RoofBayNumber",
		"DistFromLeftColumn",
		"BaseRecess",
		"RoofBayWidth",
		"Sequence",
		"mFlangeWidth",
		"mFlangeThick",
		"mWebDepth",
		"mWebThick",
		"mBasePlateWidth",
		"mBasePlateLength",
		"mBasePlateThick",
		"mABOffset",
		"mABGauge",
		"mABSpace",
		"mABDia",
		"mEavePlateWidth",
		"mEavePlateLength",
		"mEavePlateThick",
		"mEaveGussetWidth",
		"mEaveGussetLength",
		"mEaveGussetThick",
		"mKnifePlateWidth",
		"mKnifePlateLength",
		"mKnifePlateThick",
		"mRodDia",
		"mClevisPlateWidth",
		"mClevisPlateLength",
		"mClevisPlateThick")
	SELECT
		NewGirtSpacingId,
		igw."Elevation",
		igw."RoofBayNumber",
		igw."DistFromLeftColumn",
		igw."BaseRecess",
		igw."RoofBayWidth",
		igw."Sequence",
		igw."mFlangeWidth",
		igw."mFlangeThick",
		igw."mWebDepth",
		igw."mWebThick",
		igw."mBasePlateWidth",
		igw."mBasePlateLength",
		igw."mBasePlateThick",
		igw."mABOffset",
		igw."mABGauge",
		igw."mABSpace",
		igw."mABDia",
		igw."mEavePlateWidth",
		igw."mEavePlateLength",
		igw."mEavePlateThick",
		igw."mEaveGussetWidth",
		igw."mEaveGussetLength",
		igw."mEaveGussetThick",
		igw."mKnifePlateWidth",
		igw."mKnifePlateLength",
		igw."mKnifePlateThick",
		igw."mRodDia",
		igw."mClevisPlateWidth",
		igw."mClevisPlateLength",
		igw."mClevisPlateThick"
	FROM "Input_GirtsBaySpacing_Wall" igw
    WHERE igw."GirtSpacingId" = y_6;
    END;
  END LOOP;
END;    
END;
  END LOOP;
END;
	INSERT INTO "Input_ShopCoat"(
		"BuildingInformationId",
		"GalvanizedSecondary",
		"SealWelds",
		"HotDippedPrimary",
		"HotDippedPrice",
		"HotDippedWeight",
		"SealWeldsPrice",
		"SealWeldsWeight",
		"QuoteNumber",
		"QuoteYear",
		"EstimatorInitials",
		"ExpiresOn",
		"BoltFinish",
		"CreatedBy",
		"CreatedDate",
		"IsDelete",
		"IpAddress",
		"ShopCoatDrpId")
	SELECT
		NewBuildingInformationId,
		isc."GalvanizedSecondary",
		isc."SealWelds",
		isc."HotDippedPrimary",
		isc."HotDippedPrice",
		isc."HotDippedWeight",
		isc."SealWeldsPrice",
		isc."SealWeldsWeight",
		isc."QuoteNumber",
		isc."QuoteYear",
		isc."EstimatorInitials",
		isc."ExpiresOn",
		isc."BoltFinish",
		UserDetailId,
		CURRENT_TIMESTAMP,
		isc."IsDelete",
		isc."IpAddress",
		isc."ShopCoatDrpId"
	FROM "Input_ShopCoat" isc
    WHERE NVL("IsDelete", 'N') = 'N' AND isc."BuildingInformationId" = x_2;
    --SELECT "BuildingInformationId" INTO Total FROM "Input_AddLines" WHERE "BuildingInformationId" = x_2;
   --IF Total > 0 OR Total is not null
   --THEN
	INSERT INTO "Input_AddLines"(
		"BuildingInformationId",
		"Description",
		"UnitWeight",
		"UnitPrice",
		"ListOrNet",
		"ExpiresOn",
		"QuoteNumber",
		"QuoteYear",
		"EstInitials",
		"Guid",
		"Quantity",
		"Internal",
		"IncludeFreight",
		"DontShowPriceWeight",
		"IsSpecialized",
		"ScreenType",
		"TaxApplied",
		"AdjustmentFactor",
		"Expired",
		"Category",
		"BuiltupWeight",
		"BuiltupPrice",
		"HotrolledWeight",
		"HotrolledPrice",
		"ColdformWeight",
		"ColdformPrice",
		"FabColdformWeight",
		"FabColdformPrice",
		"RoofpanelWeight",
		"RoofpanelPrice",
		"WallpanelWeight",
		"WallpanelPrice",
		"TrimWeight",
		"TrimPrice",
		"BuyoutsWeight",
		"BuyoutsPrice",
		"WarehouseWeight",
		"WarehousePrice",
		"OtherWeight",
		"OtherPrice",
		"AdditionalEngineering",
		"DrawingsCalcs",
		"WTWarranty",
		insulation,
		"Freight",
		"FabricatedICF",
		"BuyoutMarkup",
		"DetailsByPercentage",
		"MezzanineNumber",
		"RmgPrice",
		"ProjectId",
		"IpAddress",
		"IsDelete",
		"CreatedBy",
		"CreatedDate")
    VALUES( 
        NewBuildingInformationId,
		(SELECT ia."Description" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."UnitWeight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."UnitPrice" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."ListOrNet" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."ExpiresOn" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."QuoteNumber" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."QuoteYear" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."EstInitials" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT sys_guid() AS "Guid" FROM dual),
		(SELECT ia."Quantity" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."Internal" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."IncludeFreight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."DontShowPriceWeight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."IsSpecialized" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."ScreenType" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."TaxApplied" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."AdjustmentFactor" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."Expired" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."Category" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."BuiltupWeight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."BuiltupPrice" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."HotrolledWeight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."HotrolledPrice" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."ColdformWeight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."ColdformPrice" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."FabColdformWeight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."FabColdformPrice" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."RoofpanelWeight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."RoofpanelPrice" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."WallpanelWeight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."WallpanelPrice" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."TrimWeight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."TrimPrice" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."BuyoutsWeight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."BuyoutsPrice" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."WarehouseWeight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."WarehousePrice" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."OtherWeight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."OtherPrice" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."AdditionalEngineering" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."DrawingsCalcs" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."WTWarranty" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia.insulation FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."Freight" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."FabricatedICF" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."BuyoutMarkup" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."DetailsByPercentage" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."MezzanineNumber" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."RmgPrice" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."ProjectId" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."IpAddress" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		(SELECT ia."IsDelete" FROM "Input_AddLines" ia WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2),
		UserDetailId,
		CURRENT_TIMESTAMP) returning "Guid" INTO NewGuid;
	INSERT INTO "Input_NetAddLineDetails"(
		"Guid",
		"Description",
		"Weight",
		"SellPrice",
		"Cost",
		"Margin",
		"Markup",
		"HeaderId")
	SELECT
		NewGuid,
		inad."Description",
		inad."Weight",
		inad."SellPrice",
		inad."Cost",
		inad."Margin",
		inad."Markup",
		inad."HeaderId"
	FROM "Input_NetAddLineDetails" inad
    WHERE inad."Guid" IN (SELECT "Guid" FROM "Input_AddLines" WHERE NVL("IsDelete", 'N') = 'N' AND "BuildingInformationId" = x_2);
    --END IF;
		DECLARE
		CURSOR c_quote3
		IS
			SELECT
			"iew3"."EndWallID"
		FROM
			"Input_Endwall" "iew3"
		WHERE
			"iew3"."BuildingNo" = x_2 ;
		BEGIN
		FOR r_product3 IN c_quote3
		LOOP
		DECLARE y_3 number;
		BEGIN
				SELECT r_product3."EndWallID"  INTO y_3 FROM dual;
	INSERT INTO "Input_Endwall"(
		"BuildingNo",
		"FrameType",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"ProjectId",
		"EndWallNo",
		"ElevationType",
		"IsDeleted",
		"ColumnSpacingType",
		"InsulationTrim",
		"NonStandardSetback",
		"DesignedSetback",
		"SpecifiedSetback",
		"BayCount",
		"GableFlash")
	VALUES(NewBuildingInformationId,
		(SELECT ie."FrameType" FROM "Input_Endwall" ie WHERE NVL("IsDeleted", 'N') = 'N' AND "EndWallID" = y_3),
		UserDetailId,
		CURRENT_TIMESTAMP,
		(SELECT ie."IpAddress" FROM "Input_Endwall" ie WHERE NVL("IsDeleted", 'N') = 'N' AND "EndWallID" = y_3),
		OutputId,
		(SELECT ie."EndWallNo" FROM "Input_Endwall" ie WHERE NVL("IsDeleted", 'N') = 'N' AND "EndWallID" = y_3),
		(SELECT ie."ElevationType" FROM "Input_Endwall" ie WHERE NVL("IsDeleted", 'N') = 'N' AND "EndWallID" = y_3),
		(SELECT ie."IsDeleted" FROM "Input_Endwall" ie WHERE NVL("IsDeleted", 'N') = 'N' AND "EndWallID" = y_3),
		(SELECT ie."ColumnSpacingType" FROM "Input_Endwall" ie WHERE NVL("IsDeleted", 'N') = 'N' AND "EndWallID" = y_3),
		(SELECT ie."InsulationTrim" FROM "Input_Endwall" ie WHERE NVL("IsDeleted", 'N') = 'N' AND "EndWallID" = y_3),
		(SELECT ie."NonStandardSetback" FROM "Input_Endwall" ie WHERE NVL("IsDeleted", 'N') = 'N' AND "EndWallID" = y_3),
		(SELECT ie."DesignedSetback" FROM "Input_Endwall" ie WHERE NVL("IsDeleted", 'N') = 'N' AND "EndWallID" = y_3),
		(SELECT ie."SpecifiedSetback" FROM "Input_Endwall" ie WHERE NVL("IsDeleted", 'N') = 'N' AND "EndWallID" = y_3),
		(SELECT ie."BayCount" FROM "Input_Endwall" ie WHERE NVL("IsDeleted", 'N') = 'N' AND "EndWallID" = y_3),
		(SELECT ie."GableFlash" FROM "Input_Endwall" ie WHERE NVL("IsDeleted", 'N') = 'N' AND "EndWallID" = y_3)) returning "EndWallID" INTO NewEndWallID;

	INSERT INTO "Input_Endwalls_ColumnSpacing"(
		"BuildingNo",
		"CSType",
		"BayNo",
		"BaySpacing",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"EndWallID",
		"IsDeleted",
        "Elevation")
	SELECT
		NewBuildingInformationId,
		iecs."CSType",
		iecs."BayNo",
		iecs."BaySpacing",
		UserDetailId,
		CURRENT_TIMESTAMP,
		iecs."IpAddress",
		NewEndWallID,
		iecs."IsDeleted",
        iecs."Elevation"
	FROM "Input_Endwalls_ColumnSpacing" iecs
    WHERE NVL("IsDeleted", 'N') = 'N' AND iecs."EndWallID" = y_3 AND "BuildingNo" = x_2;        

	INSERT INTO "Input_Endwalls_Recesses"(
		"BuildingNo",
		"EWRType",
		"RecessNo",
		"Recesses",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"EndWallID",
		"IsDeleted",
		"IsFrameColumn")
	SELECT
		NewBuildingInformationId,
		ier."EWRType",
		ier."RecessNo",
		ier."Recesses",
		UserDetailId,
		CURRENT_TIMESTAMP,
		ier."IpAddress",
		NewEndWallID,
		ier."IsDeleted",
		ier."IsFrameColumn"
	FROM "Input_Endwalls_Recesses" ier
    WHERE NVL("IsDeleted", 'N') = 'N' AND ier."EndWallID" = y_3 AND "BuildingNo" = x_2;
END;
  END LOOP;
END;

	INSERT INTO "OpenAreas"(
		"BuildingNumber",
		"Elevation",
		"BayNumber",
		"DistFromLeftCorner",
		"DistFromLeftColumn",
		"OpeningType",
		"OpenEndwall",
		"OpeningWidth",
		"OpeningHeight",
		"MaterialType",
		"MaterialWeight",
		"MaterialThickness",
		"DistSteelLinetoBeam",
		"DistSteelLinetoMaterial",
		"MasonryType",
		"MaterialDirection",
		"ShearWall",
		"PercentOpenforWind",
		"LeftJamb",
		"LeftJambFlash",
		"LeftJambFlangeWidth",
		"LeftJambFlangeThick",
		"LeftJambWebDepth",
		"LeftJambWebThick",
		"RightJamb",
		"RightJambFlash",
		"RightJambFlangeWidth",
		"RightJambFlangeThick",
		"RightJambWebDepth",
		"RightJambWebThick",
		"HeaderFlash",
		"HeaderFlashType",
		"HeaderFlashColor",
		"AttachmentNumber",
		"AllowableDrift",
		"BeamSelected",
		"BeamStartCol",
		"BeamStopCol",
		"BeamHeight",
		"BeamFlanges",
		"BeamWebThick",
		"BeamWebDepth",
		"BeamFlangeThick",
		"BeamFlangeWidth",
		"BeamDeflection",
		"BeamAttachmentSpacing",
		"BeamSteelline",
		"BeamSection",
		"BeamWeight",
		"BeamPrice",
		"BeamIsPriced",
		"BeamErrorCode",
		"LedgerAngle",
		"AllElevations",
		"ColumnBracing",
		"NoOutsideColumns",
		"PanelsSpan",
		"NoFlangeBelow",
		"AllowableInsulation",
		"PartitionNumber",
		"DeductPanelsTrimOnly",
		"FullWidth",
		"ParapetByOther",
		"HeaderFlashColorValsparCode",
		"HeaderFlashColorSpecialName",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDeleted")
	SELECT
		NewBuildingInformationId,
		oa."Elevation",
		oa."BayNumber",
		oa."DistFromLeftCorner",
		oa."DistFromLeftColumn",
		oa."OpeningType",
		oa."OpenEndwall",
		oa."OpeningWidth",
		oa."OpeningHeight",
		oa."MaterialType",
		oa."MaterialWeight",
		oa."MaterialThickness",
		oa."DistSteelLinetoBeam",
		oa."DistSteelLinetoMaterial",
		oa."MasonryType",
		oa."MaterialDirection",
		oa."ShearWall",
		oa."PercentOpenforWind",
		oa."LeftJamb",
		oa."LeftJambFlash",
		oa."LeftJambFlangeWidth",
		oa."LeftJambFlangeThick",
		oa."LeftJambWebDepth",
		oa."LeftJambWebThick",
		oa."RightJamb",
		oa."RightJambFlash",
		oa."RightJambFlangeWidth",
		oa."RightJambFlangeThick",
		oa."RightJambWebDepth",
		oa."RightJambWebThick",
		oa."HeaderFlash",
		oa."HeaderFlashType",
		oa."HeaderFlashColor",
		oa."AttachmentNumber",
		oa."AllowableDrift",
		oa."BeamSelected",
		oa."BeamStartCol",
		oa."BeamStopCol",
		oa."BeamHeight",
		oa."BeamFlanges",
		oa."BeamWebThick",
		oa."BeamWebDepth",
		oa."BeamFlangeThick",
		oa."BeamFlangeWidth",
		oa."BeamDeflection",
		oa."BeamAttachmentSpacing",
		oa."BeamSteelline",
		oa."BeamSection",
		oa."BeamWeight",
		oa."BeamPrice",
		oa."BeamIsPriced",
		oa."BeamErrorCode",
		oa."LedgerAngle",
		oa."AllElevations",
		oa."ColumnBracing",
		oa."NoOutsideColumns",
		oa."PanelsSpan",
		oa."NoFlangeBelow",
		oa."AllowableInsulation",
		oa."PartitionNumber",
		oa."DeductPanelsTrimOnly",
		oa."FullWidth",
		oa."ParapetByOther",
		oa."HeaderFlashColorValsparCode",
		oa."HeaderFlashColorSpecialName",
		UserDetailId,
		CURRENT_TIMESTAMP,
		oa."IpAddress",
		oa."IsDeleted"
	FROM "OpenAreas" oa
    WHERE NVL("IsDeleted", 'N') = 'N' AND oa."BuildingNumber" = x_2;

	INSERT INTO "BFM_Groups"(
		"BuildingNumber",
		"ColType1",
		"ColType2",
		"WebDepth1",
		"WebDepth2",
		"RafterDepth1",
		"RafterDepth2",
		"Clearspan",
		"IsElevation1",
		"IsElevation2",
		"Elevation1",
		"Elevation2",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDeleted",
		"ProjectId",
		"GroupNumber",
		"HighStrengthWashers",
		"ExtColRecession1",
		"ExtColRecession2",
		"IsAdvanceColumn",
		"IntColMaxWebDepth",
		"IntColType",
		"IntColRecession",
		"IntColBaseType",
		"IntColHeaderType",
		"GroutThickness",
		"ShimsByCeco",
		"PlatedBolts",
		"FrameWeldingInspection",
		"Unsupported1",
		"Unsupported2",
		"UnsupportedElevation1",
		"UnsupportedElevation2")
	SELECT
		NewBuildingInformationId,
		bg."ColType1",
		bg."ColType2",
		bg."WebDepth1",
		bg."WebDepth2",
		bg."RafterDepth1",
		bg."RafterDepth2",
		bg."Clearspan",
		bg."IsElevation1",
		bg."IsElevation2",
		bg."Elevation1",
		bg."Elevation2",
		UserDetailId,
		CURRENT_TIMESTAMP,
		bg."IpAddress",
		bg."IsDeleted",
		OutputId,
		bg."GroupNumber",
		bg."HighStrengthWashers",
		bg."ExtColRecession1",
		bg."ExtColRecession2",
		bg."IsAdvanceColumn",
		bg."IntColMaxWebDepth",
		bg."IntColType",
		bg."IntColRecession",
		bg."IntColBaseType",
		bg."IntColHeaderType",
		bg."GroutThickness",
		bg."ShimsByCeco",
		bg."PlatedBolts",
		bg."FrameWeldingInspection",
		bg."Unsupported1",
		bg."Unsupported2",
		bg."UnsupportedElevation1",
		bg."UnsupportedElevation2"
	FROM "BFM_Groups" bg
    WHERE NVL("IsDeleted", 'N') = 'N' AND bg."BuildingNumber" = x_2;
	INSERT INTO "BFM_FrameLines"(
		"BuildingNumber",
		"GroupNumber",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDeleted",
		"ProjectId",
		"FrameLineNumber",
		"DesignGroupNumber")
	SELECT
		NewBuildingInformationId,
		bf."GroupNumber",
		UserDetailId,
		CURRENT_TIMESTAMP,
		bf."IpAddress",
		bf."IsDeleted",
		OutputId,
		bf."FrameLineNumber",
		bf."DesignGroupNumber"
	FROM "BFM_FrameLines" bf
    WHERE NVL("IsDeleted", 'N') = 'N' AND bf."BuildingNumber" = x_2;    
	INSERT INTO "BFM_Columns"(
		"BuildingNumber",
		"GroupNumber",
		"IntColType",
		"IntColRecess",
		"IntColHeaderType",
		"IntColMaxWebDepth",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDeleted",
		"ProjectId",
		"IntColBaseType",
		"ColumnNumber",
		"BracedBays")
	SELECT
		NewBuildingInformationId,
		bc."GroupNumber",
		bc."IntColType",
		bc."IntColRecess",
		bc."IntColHeaderType",
		bc."IntColMaxWebDepth",
		UserDetailId,
		CURRENT_TIMESTAMP,
		bc."IpAddress",
		bc."IsDeleted",
		OutputId,
		bc."IntColBaseType",
		bc."ColumnNumber",
		bc."BracedBays"
	FROM "BFM_Columns" bc
    WHERE NVL("IsDeleted", 'N') = 'N' AND bc."BuildingNumber" = x_2;
	INSERT INTO "BFM_Modules"(
		"BuildingNumber",
		"GroupNumber",
		"Width",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDeleted",
		"ProjectId",
		"ModuleNumber")
	SELECT
		NewBuildingInformationId,
		bm."GroupNumber",
		bm."Width",
		UserDetailId,
		CURRENT_TIMESTAMP,
		bm."IpAddress",
		bm."IsDeleted",
		OutputId,
		bm."ModuleNumber"
	FROM "BFM_Modules" bm
    WHERE NVL("IsDeleted", 'N') = 'N' AND bm."BuildingNumber" = x_2;
--    SELECT COUNT("BuildingNumber") INTO Total FROM "Bracing" WHERE "BuildingNumber" = x_2;
--    
--    IF Total != 0 Or Total Is not null
--    THEN
	INSERT INTO "Bracing"(
		"BuildingNumber",
		"SW1BracingType",
		"SW1Tiers",
		"SW1BracingLocations",
		"SW1UnbraceableLocations",
		"SW1ExcludeDiaphragm",
		"SW2BracingType",
		"SW2Tiers",
		"SW2BracingLocations",
		"SW2UnbraceableLocations",
		"SW2ExcludeDiaphragm",
		"EW3BracingType",
		"EW3Tiers",
		"EW3BracingLocations",
		"EW3UnbraceableLocations",
		"EW3ExcludeDiaphragm",
		"EW4BracingType",
		"EW4Tiers",
		"EW4BracingLocations",
		"EW4UnbraceableLocations",
		"EW4ExcludeDiaphragm",
		"RoofBracingType",
		"RoofBracingLocations",
		"RoofUnbraceableLocations",
		"RoofExcludeDiaphragm",
		"Purlins",
		"Girts",
		"ErectionRods",
		"AllowTorsion",
		"ErectionBayWidth",
		"RafterFlangeBrace",
		"ColumnFlangeBrace",
		"SW1PFrameType",
		"SW1PFrameHeight",
		"SW2PFrameType",
		"SW2PFrameHeight",
		"SW1FBBCRight",
		"SW2FBBCRight",
		"SW1Girts",
		"SW2Girts",
		"EW3Girts",
		"EW4Girts",
		"EW3PFrameType",
		"EW3PFrameHeight",
		"EW4PFrameType",
		"EW4PFrameHeight",
		"OverrideFlangeBraceRoof",
		"OverrideFlangeBraceWall",
		"CreatedBy",
		"CreatedDate",
		"IsDelete",
		"IpAddress",
		"BuildingInformationId",
		"LBPBracingLocation",
		"IsReset",
		"PortalRafterDepth1",
		"PortalRafterDepth2",
		"PortalRafterDepth3",
		"PortalRafterDepth4")
	VALUES( 
		NewBuildingInformationId,
		(SELECT br."SW1BracingType" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW1Tiers" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW1BracingLocations" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW1UnbraceableLocations" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW1ExcludeDiaphragm" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW2BracingType" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW2Tiers" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW2BracingLocations" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW2UnbraceableLocations" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW2ExcludeDiaphragm" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW3BracingType" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW3Tiers" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW3BracingLocations" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW3UnbraceableLocations" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW3ExcludeDiaphragm" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW4BracingType" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW4Tiers" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW4BracingLocations" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW4UnbraceableLocations" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW4ExcludeDiaphragm" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."RoofBracingType" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."RoofBracingLocations" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."RoofUnbraceableLocations" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."RoofExcludeDiaphragm" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."Purlins" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."Girts" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."ErectionRods" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."AllowTorsion" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."ErectionBayWidth" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."RafterFlangeBrace" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."ColumnFlangeBrace" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW1PFrameType" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW1PFrameHeight" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW2PFrameType" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW2PFrameHeight" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW1FBBCRight" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW2FBBCRight" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW1Girts" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."SW2Girts" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW3Girts" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW4Girts" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW3PFrameType" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW3PFrameHeight" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW4PFrameType" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."EW4PFrameHeight" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."OverrideFlangeBraceRoof" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."OverrideFlangeBraceWall" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		UserDetailId,
		CURRENT_TIMESTAMP,
		(SELECT br."IsDelete" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."IpAddress" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		NewBuildingInformationId,
		(SELECT br."LBPBracingLocation" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."IsReset" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."PortalRafterDepth1" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."PortalRafterDepth2" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."PortalRafterDepth3" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2),
		(SELECT br."PortalRafterDepth4" FROM "Bracing" br WHERE NVL("IsDelete", 'N') = 'N' AND br."BuildingNumber" = x_2)) returning "BracingId" into NewBracingId;
--END IF;
   -- SELECT COUNT(*) INTO Total FROM NewBracingId;
    IF NewBracingId > 0 OR NewBracingId is not null
    THEN
	INSERT INTO "Bracing_XBraceAnchor"(
		"BayNumber",
		"DistFromLeftCornerLeft",
		"DistFromLeftColumnLeft",
		"DistFromLeftCornerRight",
		"DistFromLeftColumnRight",
		"LeftSteelLine",
		"BracingId",
		"BuildingInformationId",
		"Elevation")
	SELECT
		bxba."BayNumber",
		bxba."DistFromLeftCornerLeft",
		bxba."DistFromLeftColumnLeft",
		bxba."DistFromLeftCornerRight",
		bxba."DistFromLeftColumnRight",
		bxba."LeftSteelLine",
		NewBracingId,
		NewBuildingInformationId,
		bxba."Elevation"
	FROM "Bracing_XBraceAnchor" bxba
    WHERE bxba."BuildingInformationId" = x_2;
	INSERT INTO "EndWallPotalFrame"(
		"EW3Height",
		"EW3HeightValue",
		"EW3RodTiers",
		"EW3WebDepthMaxColumn",
		"EW3WebDepthMaxRafter",
		"EW4Height",
		"EW4HeightValue",
		"EW4RodTiers",
		"EW4WebDepthMaxColumn",
		"EW4WebDepthMaxRafter",
		"BracingId",
		"BuildingInformationId")
	SELECT
		ewpf."EW3Height",
		ewpf."EW3HeightValue",
		ewpf."EW3RodTiers",
		ewpf."EW3WebDepthMaxColumn",
		ewpf."EW3WebDepthMaxRafter",
		ewpf."EW4Height",
		ewpf."EW4HeightValue",
		ewpf."EW4RodTiers",
		ewpf."EW4WebDepthMaxColumn",
		ewpf."EW4WebDepthMaxRafter",
		NewBracingId,
		NewBuildingInformationId
	FROM "EndWallPotalFrame" ewpf
    WHERE ewpf."BuildingInformationId" = x_2;

	INSERT INTO "SideWallPortalFrame"(
		"SW1Height",
		"SW1HeightValue",
		"SW1RodTiers",
		"SW1WebDepthMaxColumn",
		"SW1WebDepthMaxRafter",
		"SW2Height",
		"SW2HeightValue",
		"SW2RodTiers",
		"SW2WebDepthMaxColumn",
		"SW2WebDepthMaxRafter",
		"BracingId",
		"BuildingInformationId")
	SELECT
		swpf."SW1Height",
		swpf."SW1HeightValue",
		swpf."SW1RodTiers",
		swpf."SW1WebDepthMaxColumn",
		swpf."SW1WebDepthMaxRafter",
		swpf."SW2Height",
		swpf."SW2HeightValue",
		swpf."SW2RodTiers",
		swpf."SW2WebDepthMaxColumn",
		swpf."SW2WebDepthMaxRafter",
		NewBracingId,
		NewBuildingInformationId
	FROM "SideWallPortalFrame" swpf
    WHERE swpf."BuildingInformationId" = x_2;
END IF;
	INSERT INTO "Input_Roof"(
		"Type",
		"Gauge",
		"ULRating",
		"Width",
		"Profile",
		"Thick",
		"Clip",
		"NotByStar",
		"StructScrews",
		"StitchScrews",
		"Material",
		"ThermalBlock",
		"MetalRibClosure",
		"SealedRoof",
		"RidgePan",
		"AlignmentStrip",
		"ULLetter",
		"EavePanelExtension",
		"IsBuyout",
		"SquareFeet",
		"ThermalBlockThickness",
		"ProvideBlocks",
		"RoofFirst",
		"InsulationClips",
		"Weathertightness",
		"SealedEave",
		"ThickInsulation",
		"RTSSystem",
		"RTSFinish",
		"RTSPanelType",
		"RTSThickness",
		"RTSSpacing",
		"ThermalBlockType",
		"FastenerType",
		"FastenerHeadFinish",
		"FastenerLength",
		"WideTape",
		"EaveIcing",
		"Warranty",
		"FactoryAppliedSealant",
		"WeathertightnessTerm",
		"IMPAccLoads",
		"SeamerRental",
		"StainlessSteelCaps",
		"NonhandedErection",
		"Direction",
		"ProvideHandTools",
		"RTSPanelGauge",
		"FastenerVender",
		"ExteriorSkinTexture",
		"FMRating",
		"RoofNavNumber",
		"WindRating",
		hass5clamps,
		"IMPPlant",
		"IMPLoads",
		"IncludeToolKit",
		"ColdStorageBuilding",
		"InteriorSkinProfile",
		"InteriorSkinGauge",
		"InteriorSkinTexture",
		"HasSnowRetentionSystem",
		"SnowRetentionRp1",
		"SnowRetentionRp2",
		"SnowRetentionRp3",
		"SnowRetentionRp4",
		"IncludeSnowClipPerPanel",
		"SnowClipQuantity",
		"ColorStripQuantity",
		"Rp1SnowLoad",
		"Rp2SnowLoad",
		"Rp3SnowLoad",
		"Rp4SnowLoad",
		"BuildingInformationId",
		"IpAddress",
		"CreatedBy",
		"CreatedDate",
		"BURLoad",
		"FinishWarranty",
		"RValue")
	SELECT
		ir."Type",
		ir."Gauge",
		ir."ULRating",
		ir."Width",
		ir."Profile",
		ir."Thick",
		ir."Clip",
		ir."NotByStar",
		ir."StructScrews",
		ir."StitchScrews",
		ir."Material",
		ir."ThermalBlock",
		ir."MetalRibClosure",
		ir."SealedRoof",
		ir."RidgePan",
		ir."AlignmentStrip",
		ir."ULLetter",
		ir."EavePanelExtension",
		ir."IsBuyout",
		ir."SquareFeet",
		ir."ThermalBlockThickness",
		ir."ProvideBlocks",
		ir."RoofFirst",
		ir."InsulationClips",
		ir."Weathertightness",
		ir."SealedEave",
		ir."ThickInsulation",
		ir."RTSSystem",
		ir."RTSFinish",
		ir."RTSPanelType",
		ir."RTSThickness",
		ir."RTSSpacing",
		ir."ThermalBlockType",
		ir."FastenerType",
		ir."FastenerHeadFinish",
		ir."FastenerLength",
		ir."WideTape",
		ir."EaveIcing",
		ir."Warranty",
		ir."FactoryAppliedSealant",
		ir."WeathertightnessTerm",
		ir."IMPAccLoads",
		ir."SeamerRental",
		ir."StainlessSteelCaps",
		ir."NonhandedErection",
		ir."Direction",
		ir."ProvideHandTools",
		ir."RTSPanelGauge",
		ir."FastenerVender",
		ir."ExteriorSkinTexture",
		ir."FMRating",
		ir."RoofNavNumber",
		ir."WindRating",
		ir.hass5clamps,
		ir."IMPPlant",
		ir."IMPLoads",
		ir."IncludeToolKit",
		ir."ColdStorageBuilding",
		ir."InteriorSkinProfile",
		ir."InteriorSkinGauge",
		ir."InteriorSkinTexture",
		ir."HasSnowRetentionSystem",
		ir."SnowRetentionRp1",
		ir."SnowRetentionRp2",
		ir."SnowRetentionRp3",
		ir."SnowRetentionRp4",
		ir."IncludeSnowClipPerPanel",
		ir."SnowClipQuantity",
		ir."ColorStripQuantity",
		ir."Rp1SnowLoad",
		ir."Rp2SnowLoad",
		ir."Rp3SnowLoad",
		ir."Rp4SnowLoad",
		NewBuildingInformationId,
		ir."IpAddress",
		UserDetailId,
		CURRENT_TIMESTAMP,
		ir."BURLoad",
		ir."FinishWarranty",
		ir."RValue"
	FROM "Input_Roof" ir
    WHERE ir."BuildingInformationId" = x_2;
	INSERT INTO "Input_Wall"(
		"BuildingInformationId",
		"Type",
		"Gauge",
		"Thick",
		"BaseFraming",
		"BaseFlash",
		"BaseClosure",
		"SealedWall",
		"Washers",
		"Notch",
		"RakeClosure",
		"EaveClosureStrip",
		"FastenerType",
		"FastenerHeadFinish",
		"FastenerLength",
		"Warranty",
		"FactoryAppliedSealant",
		"ReverseRolled",
		"OutsideMetalClosure",
		"SidelapSealant",
		"ColdStorageBuilding",
		"ExteriorSkinProfile",
		"ExteriorSkinTexture",
		"InteriorSkinProfile",
		"InteriorSkinTexture",
		"InteriorSkinGauge",
		"Width",
		"NotchWidth",
		"NotchDepth",
		"NotchType",
		"RValue",
		"UValue",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"FoamTape")
	SELECT
		NewBuildingInformationId,
		iw."Type",
		iw."Gauge",
		iw."Thick",
		iw."BaseFraming",
		iw."BaseFlash",
		iw."BaseClosure",
		iw."SealedWall",
		iw."Washers",
		iw."Notch",
		iw."RakeClosure",
		iw."EaveClosureStrip",
		iw."FastenerType",
		iw."FastenerHeadFinish",
		iw."FastenerLength",
		iw."Warranty",
		iw."FactoryAppliedSealant",
		iw."ReverseRolled",
		iw."OutsideMetalClosure",
		iw."SidelapSealant",
		iw."ColdStorageBuilding",
		iw."ExteriorSkinProfile",
		iw."ExteriorSkinTexture",
		iw."InteriorSkinProfile",
		iw."InteriorSkinTexture",
		iw."InteriorSkinGauge",
		iw."Width",
		iw."NotchWidth",
		iw."NotchDepth",
		iw."NotchType",
		iw."RValue",
		iw."UValue",
		UserDetailId,
		CURRENT_TIMESTAMP,
		iw."IpAddress",
		iw."IsDelete",
		iw."FoamTape"
	FROM "Input_Wall" iw
    WHERE NVL("IsDelete", 'N') = 'N' AND iw."BuildingInformationId" = x_2;
	INSERT INTO "Input_Trim"(
		"BuildingNumber",
		"SW1TrimOption",
		"SW2TrimOption",
		"EW3TrimOption",
		"EW4TrimOption",
		"SW1NorthernGutter",
		"SW2NorthernGutter",
		"EW3NorthernGutter",
		"EW4NorthernGutter",
		"SW1GutterSize",
		"SW2GutterSize",
		"EW3GutterSize",
		"EW4GutterSize",
		"SW1IncludeElbows",
		"SW2IncludeElbows",
		"EW3IncludeElbows",
		"EW4IncludeElbows",
		"SW1Drops",
		"SW2Drops",
		"EW3Drops",
		"EW4Drops",
		"SW1DropHeight",
		"SW2DropHeight",
		"EW3DropHeight",
		"EW4DropHeight",
		"TrimProfile",
		"AdditionalGutterSupports",
		"IsSW1MatchEavaHeight",
		"IsSW2MatchEavaHeight",
		"IsEW3MatchEavaHeight",
		"IsEW4MatchEavaHeight",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"StructScrews",
		"StitchScrews",
		"DistFromBase",
		"EaveTrimType",
		"WallCategory",
		"IsBuyout",
		"SquareFeet",
		"GutterType",
		"SW1GutterDesignSize",
		"DownspoutType",
		"SW2GutterDesignSize",
		"BaseOption",
		"UseType2Trim",
		"EW3GutterDesignSize",
		"EW4GutterDesignSize",
		"SillClosures",
		"BaseDetail",
		"BaseTrim",
		"FastenerVender",
		"IMPPlant",
		"IMPLoads")
	SELECT
		NewBuildingInformationId,
		it."SW1TrimOption",
		it."SW2TrimOption",
		it."EW3TrimOption",
		it."EW4TrimOption",
		it."SW1NorthernGutter",
		it."SW2NorthernGutter",
		it."EW3NorthernGutter",
		it."EW4NorthernGutter",
		it."SW1GutterSize",
		it."SW2GutterSize",
		it."EW3GutterSize",
		it."EW4GutterSize",
		it."SW1IncludeElbows",
		it."SW2IncludeElbows",
		it."EW3IncludeElbows",
		it."EW4IncludeElbows",
		it."SW1Drops",
		it."SW2Drops",
		it."EW3Drops",
		it."EW4Drops",
		it."SW1DropHeight",
		it."SW2DropHeight",
		it."EW3DropHeight",
		it."EW4DropHeight",
		it."TrimProfile",
		it."AdditionalGutterSupports",
		it."IsSW1MatchEavaHeight",
		it."IsSW2MatchEavaHeight",
		it."IsEW3MatchEavaHeight",
		it."IsEW4MatchEavaHeight",
		UserDetailId,
		CURRENT_TIMESTAMP,
		it."IpAddress",
		it."IsDelete",
		it."StructScrews",
		it."StitchScrews",
		it."DistFromBase",
		it."EaveTrimType",
		it."WallCategory",
		it."IsBuyout",
		it."SquareFeet",
		it."GutterType",
		it."SW1GutterDesignSize",
		it."DownspoutType",
		it."SW2GutterDesignSize",
		it."BaseOption",
		it."UseType2Trim",
		it."EW3GutterDesignSize",
		it."EW4GutterDesignSize",
		it."SillClosures",
		it."BaseDetail",
		it."BaseTrim",
		it."FastenerVender",
		it."IMPPlant",
		it."IMPLoads"
	FROM "Input_Trim" it
    WHERE NVL("IsDelete", 'N') = 'N' AND it."BuildingNumber" = x_2;
	INSERT INTO "Input_TrimColorSelections"(
		"BuildingNumber",
		"RoofPanel",
		"WallPanel",
		"EaveFlash",
		"GableFlash",
		"CornerFlash",
		"BaseFlash",
		"AllOtherFlash",
		"RoofGuarantee",
		"WallGuarantee",
		"PerforationGuarantee",
		"YearPaint",
		"StructPaint",
		"Gutters",
		"Downspouts",
		"FinishWall",
		"FinishRoof",
		"FinishEave",
		"FinishGable",
		"FinishCorner",
		"FinishAllOther",
		"FinishBase",
		"FinishGutter",
		"FinishDownspouts",
		"AllTrimSameColor",
		"RoofToRoof",
		"RoofToWall",
		"RoofInteriorSkin",
		"WallInteriorSkin",
		"RoofPanelValsparCode",
		"RoofPanelSpecialName",
		"WallPanelValsparCode",
		"WallPanelSpecialName",
		"EaveFlashValsparCode",
		"EaveFlashSpecialName",
		"GableFlashValsparCode",
		"GableFlashSpecialName",
		"CornerFlashValsparCode",
		"CornerFlashSpecialName",
		"BaseFlashValsparCode",
		"BaseFlashSpecialName",
		"AllOtherFlashValsparCode",
		"AllOtherFlashSpecialName",
		"GuttersValsparCode",
		"GuttersSpecialName",
		"DownspoutsValsparCode",
		"DownspoutsSpecialName",
		"RoofToRoofValsparCode",
		"RoofToRoofSpecialName",
		"RoofToWallValsparCode",
		"RoofToWallSpecialName",
		"RoofInteriorSkinValsparCode",
		"RoofInteriorSkinSpecialName",
		"WallInteriorSkinValsparCode",
		"WallInteriorSkinSpecialName",
		"WalkDoors",
		"WalkDoorsValsparCode",
		"WalkDoorsSpecialName",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"WallPanelText",
		"WallPanelHashCode",
		"WallInteriorText",
		"WallInteriorHashCode",
		"EaveFlashColor",
		"EaveFlashHashCode",
		"GableFlashColor",
		"GableFlashHashCode",
		"CornerFlashColor",
		"CornerFlashHashCode",
		"BaseFlashColor",
		"BaseFlashHashCode",
		"GuttersColor",
		"GuttersHashCode",
		"DownspoutsColor",
		"DownspoutsHashCode",
		"AllOtherFlashColor",
		"AllOtherFlashHashCode",
		"RoofToRoofColor",
		"RoofToRoofHashCode",
		"RoofToWallColor",
		"RoofToWallHashCode",
		"WalkDoorsColor",
		"WalkDoorsHashCode")
	SELECT
		NewBuildingInformationId,
		itcs."RoofPanel",
		itcs."WallPanel",
		itcs."EaveFlash",
		itcs."GableFlash",
		itcs."CornerFlash",
		itcs."BaseFlash",
		itcs."AllOtherFlash",
		itcs."RoofGuarantee",
		itcs."WallGuarantee",
		itcs."PerforationGuarantee",
		itcs."YearPaint",
		itcs."StructPaint",
		itcs."Gutters",
		itcs."Downspouts",
		itcs."FinishWall",
		itcs."FinishRoof",
		itcs."FinishEave",
		itcs."FinishGable",
		itcs."FinishCorner",
		itcs."FinishAllOther",
		itcs."FinishBase",
		itcs."FinishGutter",
		itcs."FinishDownspouts",
		itcs."AllTrimSameColor",
		itcs."RoofToRoof",
		itcs."RoofToWall",
		itcs."RoofInteriorSkin",
		itcs."WallInteriorSkin",
		itcs."RoofPanelValsparCode",
		itcs."RoofPanelSpecialName",
		itcs."WallPanelValsparCode",
		itcs."WallPanelSpecialName",
		itcs."EaveFlashValsparCode",
		itcs."EaveFlashSpecialName",
		itcs."GableFlashValsparCode",
		itcs."GableFlashSpecialName",
		itcs."CornerFlashValsparCode",
		itcs."CornerFlashSpecialName",
		itcs."BaseFlashValsparCode",
		itcs."BaseFlashSpecialName",
		itcs."AllOtherFlashValsparCode",
		itcs."AllOtherFlashSpecialName",
		itcs."GuttersValsparCode",
		itcs."GuttersSpecialName",
		itcs."DownspoutsValsparCode",
		itcs."DownspoutsSpecialName",
		itcs."RoofToRoofValsparCode",
		itcs."RoofToRoofSpecialName",
		itcs."RoofToWallValsparCode",
		itcs."RoofToWallSpecialName",
		itcs."RoofInteriorSkinValsparCode",
		itcs."RoofInteriorSkinSpecialName",
		itcs."WallInteriorSkinValsparCode",
		itcs."WallInteriorSkinSpecialName",
		itcs."WalkDoors",
		itcs."WalkDoorsValsparCode",
		itcs."WalkDoorsSpecialName",
		UserDetailId,
		CURRENT_TIMESTAMP,
		itcs."IpAddress",
		itcs."IsDelete",
		itcs."WallPanelText",
		itcs."WallPanelHashCode",
		itcs."WallInteriorText",
		itcs."WallInteriorHashCode",
		itcs."EaveFlashColor",
		itcs."EaveFlashHashCode",
		itcs."GableFlashColor",
		itcs."GableFlashHashCode",
		itcs."CornerFlashColor",
		itcs."CornerFlashHashCode",
		itcs."BaseFlashColor",
		itcs."BaseFlashHashCode",
		itcs."GuttersColor",
		itcs."GuttersHashCode",
		itcs."DownspoutsColor",
		itcs."DownspoutsHashCode",
		itcs."AllOtherFlashColor",
		itcs."AllOtherFlashHashCode",
		itcs."RoofToRoofColor",
		itcs."RoofToRoofHashCode",
		itcs."RoofToWallColor",
		itcs."RoofToWallHashCode",
		itcs."WalkDoorsColor",
		itcs."WalkDoorsHashCode"
	FROM "Input_TrimColorSelections" itcs
    WHERE NVL("IsDelete", 'N') = 'N' AND itcs."BuildingNumber" = x_2;
	INSERT INTO "Deflections"(
		"ProjectId",
		"BuildingNumber",
		"PurlinsLive",
		"PurlinsSnow",
		"PurlinsWind",
		"PurlinsGravity",
		"PurlinsUplift",
		"RaftersLive",
		"RaftersSnow",
		"RaftersWind",
		"RaftersGravity",
		"RaftersUplift",
		"WallGirts",
		"WallCol",
		"WallWind",
		"RoofLive",
		"RoofSnow",
		"RoofWind",
		"RoofGravity",
		"RoofUplift",
		"FrameLive",
		"FrameSnow",
		"FrameWind",
		"FrameSeismic",
		"FrameCrane",
		"FrameTotalWind",
		"FrameTotalSeismic",
		"FrameTotalGravity",
		"FramePortalWind",
		"FramePortalSeismic",
		"SuspendedCeiling",
		"FaceBrickWall",
		"DryvitFinish",
		"PurlinsLiveFlag",
		"PurlinsSnowFlag",
		"PurlinsWindFlag",
		"PurlinsGravityFlag",
		"PurlinsUpliftFlag",
		"RaftersLiveFlag",
		"RaftersSnowFlag",
		"RaftersWindFlag",
		"RaftersGravityFlag",
		"RaftersUpliftFlag",
		"WallGirtsFlag",
		"WallColFlag",
		"WallWindFlag",
		"RoofLiveFlag",
		"RoofSnowFlag",
		"RoofWindFlag",
		"RoofGravityFlag",
		"RoofUpliftFlag",
		"FrameLiveFlag",
		"FrameSnowFlag",
		"FrameWindFlag",
		"FrameSeismicFlag",
		"FrameCraneFlag",
		"FrameTotalWindFlag",
		"FrameTotalSeismicFlag",
		"FrameTotalGravityFlag",
		"FramePortalWindFlag",
		"FramePortalSeismicFlag",
		"RoofPanelLive",
		"RoofPanelSnow",
		"RoofPanelWind",
		"RoofPanelGravity",
		"RoofPanelUplift",
		"WallPanel",
		"RoofPanelLiveFlag",
		"RoofPanelSnowFlag",
		"RoofPanelWindFlag",
		"RoofPanelGravityFlag",
		"RoofPanelUpliftFlag",
		"WallPanelFlag",
		"UserAccept",
		"AdvFrames",
		"AdvPurlins",
		"AdvRafters",
		"TempInteger1",
		"TempInteger2",
		"TempInteger3",
		"TempDouble1",
		"TempDouble2",
		"TempDouble3",
		"TempString1",
		"TempString2",
		"TempString3",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDeleted")
	SELECT
		OutputId,
		NewBuildingInformationId,
		df."PurlinsLive",
		df."PurlinsSnow",
		df."PurlinsWind",
		df."PurlinsGravity",
		df."PurlinsUplift",
		df."RaftersLive",
		df."RaftersSnow",
		df."RaftersWind",
		df."RaftersGravity",
		df."RaftersUplift",
		df."WallGirts",
		df."WallCol",
		df."WallWind",
		df."RoofLive",
		df."RoofSnow",
		df."RoofWind",
		df."RoofGravity",
		df."RoofUplift",
		df."FrameLive",
		df."FrameSnow",
		df."FrameWind",
		df."FrameSeismic",
		df."FrameCrane",
		df."FrameTotalWind",
		df."FrameTotalSeismic",
		df."FrameTotalGravity",
		df."FramePortalWind",
		df."FramePortalSeismic",
		df."SuspendedCeiling",
		df."FaceBrickWall",
		df."DryvitFinish",
		df."PurlinsLiveFlag",
		df."PurlinsSnowFlag",
		df."PurlinsWindFlag",
		df."PurlinsGravityFlag",
		df."PurlinsUpliftFlag",
		df."RaftersLiveFlag",
		df."RaftersSnowFlag",
		df."RaftersWindFlag",
		df."RaftersGravityFlag",
		df."RaftersUpliftFlag",
		df."WallGirtsFlag",
		df."WallColFlag",
		df."WallWindFlag",
		df."RoofLiveFlag",
		df."RoofSnowFlag",
		df."RoofWindFlag",
		df."RoofGravityFlag",
		df."RoofUpliftFlag",
		df."FrameLiveFlag",
		df."FrameSnowFlag",
		df."FrameWindFlag",
		df."FrameSeismicFlag",
		df."FrameCraneFlag",
		df."FrameTotalWindFlag",
		df."FrameTotalSeismicFlag",
		df."FrameTotalGravityFlag",
		df."FramePortalWindFlag",
		df."FramePortalSeismicFlag",
		df."RoofPanelLive",
		df."RoofPanelSnow",
		df."RoofPanelWind",
		df."RoofPanelGravity",
		df."RoofPanelUplift",
		df."WallPanel",
		df."RoofPanelLiveFlag",
		df."RoofPanelSnowFlag",
		df."RoofPanelWindFlag",
		df."RoofPanelGravityFlag",
		df."RoofPanelUpliftFlag",
		df."WallPanelFlag",
		df."UserAccept",
		df."AdvFrames",
		df."AdvPurlins",
		df."AdvRafters",
		df."TempInteger1",
		df."TempInteger2",
		df."TempInteger3",
		df."TempDouble1",
		df."TempDouble2",
		df."TempDouble3",
		df."TempString1",
		df."TempString2",
		df."TempString3",
		UserDetailId,
		CURRENT_TIMESTAMP,
		df."IpAddress",
		df."IsDeleted"
	FROM "Deflections" df
    WHERE NVL("IsDeleted", 'N') = 'N' AND df."BuildingNumber" = x_2;
	INSERT INTO "Collaterals"(
		"ProjectId",
		"BuildingNumber",
		"CeilingLoad",
		"SprinklerLoad",
		"OtherLoad",
		"PlasterSheetrock",
		"RoofLoad",
		"FrameLoad",
		"BuildingCode",
		"Occupancy",
		"ThermalFactor",
		"BurLoad",
		"CalcRoofSnowLoad",
		"ProjectNumber",
		"BuildingCodeDesign",
		"ImportanceWind",
		"ImportanceSnow",
		"ImportanceSeismic",
		"WindEnclosureInput",
		"WindEnclosureDesign",
		"Escarpment",
		"SnowDrift",
		"StorageBuilding",
		"SlipperyRoof",
		"SeismicDesignCategory",
		"Figure6_6Frame",
		"BaseWindElevation",
		"TempString1",
		"TempString2",
		"TempString3",
		"TempDouble1",
		"TempDouble2",
		"TempDouble3",
		"TempInteger1",
		"TempInteger2",
		"TempInteger3",
		"Sw1SnowDrift",
		"Sw2SnowDrift",
		"Ew3SnowDrift",
		"Ew4SnowDrift",
		"HasSwSnowDrift",
		"HasEwSnowDrift",
		"SnowExposure",
		"UnobstructedFlow",
		"WindLoad",
		"BelowWindMin",
		"DeflectionWindSpeed",
		"SdsOverride",
		"Sd1Override",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDeleted")
	SELECT
		OutputId,
		NewBuildingInformationId,
		c."CeilingLoad",
		c."SprinklerLoad",
		c."OtherLoad",
		c."PlasterSheetrock",
		c."RoofLoad",
		c."FrameLoad",
		c."BuildingCode",
		c."Occupancy",
		c."ThermalFactor",
		c."BurLoad",
		c."CalcRoofSnowLoad",
		c."ProjectNumber",
		c."BuildingCodeDesign",
		c."ImportanceWind",
		c."ImportanceSnow",
		c."ImportanceSeismic",
		c."WindEnclosureInput",
		c."WindEnclosureDesign",
		c."Escarpment",
		c."SnowDrift",
		c."StorageBuilding",
		c."SlipperyRoof",
		c."SeismicDesignCategory",
		c."Figure6_6Frame",
		c."BaseWindElevation",
		c."TempString1",
		c."TempString2",
		c."TempString3",
		c."TempDouble1",
		c."TempDouble2",
		c."TempDouble3",
		c."TempInteger1",
		c."TempInteger2",
		c."TempInteger3",
		c."Sw1SnowDrift",
		c."Sw2SnowDrift",
		c."Ew3SnowDrift",
		c."Ew4SnowDrift",
		c."HasSwSnowDrift",
		c."HasEwSnowDrift",
		c."SnowExposure",
		c."UnobstructedFlow",
		c."WindLoad",
		c."BelowWindMin",
		c."DeflectionWindSpeed",
		c."SdsOverride",
		c."Sd1Override",
		UserDetailId,
		CURRENT_TIMESTAMP,
		c."IpAddress",
		c."IsDeleted"
	FROM "Collaterals" c
    WHERE NVL("IsDeleted", 'N') = 'N' AND c."BuildingNumber" = x_2;
	INSERT INTO "Insulation"(
		"BuildingNumber",
		"ElevationOnSW1",
		"ElevationOnSW2",
		"ElevationOnEW3",
		"ElevationOnEW4",
		"ElevationOnRoof",
		"Facing",
		"Tabs",
		"RoofThick",
		"WallThick",
		"RoofSqft",
		"WallSqft",
		"StarterRoll",
		"RunningRoll",
		"FinishRoll",
		"Weight",
		"Price",
		"IsPriced",
		"ErrorCode",
		"ThickRoofInsulation",
		"InsulationType",
		"IncludeTape",
		"IncludeStaples",
		"ElevationOnPartition",
		"PartitionNumber",
		"ElevationOnEaveStrut",
		"SealedTapeTab",
		"FromWall",
		"DesignedRValue",
		"ByManufacturer",
		"OverPurlinGirt",
		"CavityPurlinBracable",
		"DesignedFacing",
		"Markup",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete")
	SELECT
		NewBuildingInformationId,
		i."ElevationOnSW1",
		i."ElevationOnSW2",
		i."ElevationOnEW3",
		i."ElevationOnEW4",
		i."ElevationOnRoof",
		i."Facing",
		i."Tabs",
		i."RoofThick",
		i."WallThick",
		i."RoofSqft",
		i."WallSqft",
		i."StarterRoll",
		i."RunningRoll",
		i."FinishRoll",
		i."Weight",
		i."Price",
		i."IsPriced",
		i."ErrorCode",
		i."ThickRoofInsulation",
		i."InsulationType",
		i."IncludeTape",
		i."IncludeStaples",
		i."ElevationOnPartition",
		i."PartitionNumber",
		i."ElevationOnEaveStrut",
		i."SealedTapeTab",
		i."FromWall",
		i."DesignedRValue",
		i."ByManufacturer",
		i."OverPurlinGirt",
		i."CavityPurlinBracable",
		i."DesignedFacing",
		i."Markup",
		UserDetailId,
		CURRENT_TIMESTAMP,
		i."IpAddress",
		i."IsDelete"
	FROM "Insulation" i
    WHERE NVL("IsDelete", 'N') = 'N' AND i."BuildingNumber" = x_2;
	INSERT INTO "InsulationAccessories"(
		"BuildingNumber",
		"ItemNumber",
		"Quantity",
		"Description",
		"Facing",
		"Width",
		"Weight",
		"Price",
		"IsPriced",
		"ErrorCode",
		"InsulationType",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete")
	SELECT
		NewBuildingInformationId,
		ias."ItemNumber",
		ias."Quantity",
		ias."Description",
		ias."Facing",
		ias."Width",
		ias."Weight",
		ias."Price",
		ias."IsPriced",
		ias."ErrorCode",
		ias."InsulationType",
		UserDetailId,
		CURRENT_TIMESTAMP,
		ias."IpAddress",
		ias."IsDelete"
	FROM "InsulationAccessories" ias
    WHERE NVL("IsDelete", 'N') = 'N' AND ias."BuildingNumber" = x_2;
	INSERT INTO "Escarpment"(
		"ProjectId",
		"BuildingNumber",
		"HillHeight",
		"Lh",
		"CrestDistance",
		"CrestUpwind",
		"FlatUpwindTerrain",
		"HillTallerBy2",
		"UpperHalfOfHill",
		"2ndRidgeOfHill",
		"TempString1",
		"TempString2",
		"TempDouble1",
		"TempDouble2",
		"TempInteger1",
		"TempInteger2",
		"Answers",
		"QuestionsAnswered",
		"Kzt",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDeleted")
	SELECT
		OutputId,
		NewBuildingInformationId,
		e."HillHeight",
		e."Lh",
		e."CrestDistance",
		e."CrestUpwind",
		e."FlatUpwindTerrain",
		e."HillTallerBy2",
		e."UpperHalfOfHill",
		e."2ndRidgeOfHill",
		e."TempString1",
		e."TempString2",
		e."TempDouble1",
		e."TempDouble2",
		e."TempInteger1",
		e."TempInteger2",
		e."Answers",
		e."QuestionsAnswered",
		e."Kzt",
		UserDetailId,
		CURRENT_TIMESTAMP,
		e."IpAddress",
		e."IsDeleted"
	FROM "Escarpment" e
    WHERE NVL("IsDeleted", 'N') = 'N' AND e."BuildingNumber" = x_2;
	INSERT INTO "PointLoads"(
		"ProjectId",
		"BuildingNumber",
		"BayNumber",
		"DistFromWall",
		"DistFromFrame",
		"Type",
		"Load",
		"Description",
		"UnitLocation",
		"InsideLength",
		"InsideWidth",
		"UnitDimension",
		"CutPurlins",
		"UnitLength",
		"UnitWidth",
		"UnitHeight",
		"NumBeams",
		"BeamByManufacturer",
		"Number",
		"IsCopy",
		"OverlapOverride",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDeleted")
	SELECT
		OutputId,
		NewBuildingInformationId,
		pl."BayNumber",
		pl."DistFromWall",
		pl."DistFromFrame",
		pl."Type",
		pl."Load",
		pl."Description",
		pl."UnitLocation",
		pl."InsideLength",
		pl."InsideWidth",
		pl."UnitDimension",
		pl."CutPurlins",
		pl."UnitLength",
		pl."UnitWidth",
		pl."UnitHeight",
		pl."NumBeams",
		pl."BeamByManufacturer",
		pl."Number",
		pl."IsCopy",
		pl."OverlapOverride",
		UserDetailId,
		CURRENT_TIMESTAMP,
		pl."IpAddress",
		pl."IsDeleted"
	FROM "PointLoads" pl
    WHERE NVL("IsDeleted", 'N') = 'N' AND pl."BuildingNumber" = x_2;
	INSERT INTO "Accesories_RoofLTP"(
		"BuildingNumber",
		"ProjectId",
		"Length",
		"Size",
		"Location",
		"IsInsulated",
		"IsUL90Framing",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"Qty",
		"Weight",
		"Price",
		"IsPriced",
		"ErrorCode")
	SELECT
		NewBuildingInformationId,
		OutputId,
		arl."Length",
		arl."Size",
		arl."Location",
		arl."IsInsulated",
		arl."IsUL90Framing",
		UserDetailId,
		CURRENT_TIMESTAMP,
		arl."IpAddress",
		arl."IsDelete",
		arl."Qty",
		arl."Weight",
		arl."Price",
		arl."IsPriced",
		arl."ErrorCode"
	FROM "Accesories_RoofLTP" arl
    WHERE NVL("IsDelete", 'N') = 'N' AND arl."BuildingNumber" = x_2 AND arl."ProjectId" = x_1;
	INSERT INTO "Accessories_RubberPipeFlash"(
		"BuildingId",
		"ProjectId",
		"Quantity",
		"OutsideDiameter",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"Type",
		"Weight",
		"Price",
		"IsPriced",
		"ErrorCode",
		"Elevation",
		"BayNumber",
		"DistFromLeftCorner",
		"DistFromLeftCol",
		"DistFromWall")
	SELECT
		NewBuildingInformationId,
		OutputId,
		arpf."Quantity",
		arpf."OutsideDiameter",
		UserDetailId,
		CURRENT_TIMESTAMP,
		arpf."IpAddress",
		arpf."IsDelete",
		arpf."Type",
		arpf."Weight",
		arpf."Price",
		arpf."IsPriced",
		arpf."ErrorCode",
		arpf."Elevation",
		arpf."BayNumber",
		arpf."DistFromLeftCorner",
		arpf."DistFromLeftCol",
		arpf."DistFromWall"
	FROM "Accessories_RubberPipeFlash" arpf
    WHERE NVL("IsDelete", 'N') = 'N' AND arpf."BuildingId" = x_2 AND arpf."ProjectId" = x_1;
	INSERT INTO "Accessories_Vents"(
		"BuildingId",
		"ProjectId",
		"Quantity",
		"RoofVent",
		"Elevation",
		"BayNumber",
		"Color",
		"Size",
		"Operator",
		"OperatorWithCable",
		"Surface",
		"ExtensionPackage",
		"TrimCollar",
		"DistFromLeftCorner",
		"DistFromLeftCol",
		"Damper",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"DistFromLeftWall",
		"RunOfVents",
		"Weight",
		"Price",
		"IsPriced",
		"ErrorCode")
	SELECT
		NewBuildingInformationId,
		OutputId,
		av."Quantity",
		av."RoofVent",
		av."Elevation",
		av."BayNumber",
		av."Color",
		av."Size",
		av."Operator",
		av."OperatorWithCable",
		av."Surface",
		av."ExtensionPackage",
		av."TrimCollar",
		av."DistFromLeftCorner",
		av."DistFromLeftCol",
		av."Damper",
		UserDetailId,
		CURRENT_TIMESTAMP,
		av."IpAddress",
		av."IsDelete",
		av."DistFromLeftWall",
		av."RunOfVents",
		av."Weight",
		av."Price",
		av."IsPriced",
		av."ErrorCode"
	FROM "Accessories_Vents" av
    WHERE NVL("IsDelete", 'N') = 'N' AND av."BuildingId" = x_2 AND av."ProjectId" = x_1;
	INSERT INTO "Accesories_WallLTP"(
		"BuildingInformationId",
		"Quantity",
		"Elevation",
		"Type",
		"Size",
		"DistFromLeftCorner",
		"DistFromLeftCol",
		"PatternPerBay",
		"EaveCondition",
		"Continuous",
		"TopElevation",
		"LTPSize",
		"AccessoryConflictOverride",
		"InsulationTrim",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"Length",
		"PartitionNumber",
		"ProjectId",
		"StopValue",
		"IsLocate",
		"Insulated",
		"TrimFlashing",
		ul90,
		"IsPriced",
		"ErrorCode",
		"QuantityA",
		"QuantityB",
		"QuantityC",
		"QuantityD",
		"Location",
		"Weight",
		"Price")
	SELECT
		NewBuildingInformationId,
		awl."Quantity",
		awl."Elevation",
		awl."Type",
		awl."Size",
		awl."DistFromLeftCorner",
		awl."DistFromLeftCol",
		awl."PatternPerBay",
		awl."EaveCondition",
		awl."Continuous",
		awl."TopElevation",
		awl."LTPSize",
		awl."AccessoryConflictOverride",
		awl."InsulationTrim",
		UserDetailId,
		CURRENT_TIMESTAMP,
		awl."IpAddress",
		awl."IsDelete",
		awl."Length",
		awl."PartitionNumber",
		OutputId,
		awl."StopValue",
		awl."IsLocate",
		awl."Insulated",
		awl."TrimFlashing",
		awl.ul90,
		awl."IsPriced",
		awl."ErrorCode",
		awl."QuantityA",
		awl."QuantityB",
		awl."QuantityC",
		awl."QuantityD",
		awl."Location",
		awl."Weight",
		awl."Price"
	FROM "Accesories_WallLTP" awl
    WHERE NVL("IsDelete", 'N') = 'N' AND awl."BuildingInformationId" = x_2 AND awl."ProjectId" = x_1;
	INSERT INTO "Accesories_Windows"(
		"BuildingNumber",
		"Quantity",
		"Elevation",
		"BayNumber",
		"Type",
		"SillHeight",
		"HeaderHeight",
		"Width",
		"DistFromLeftCorner",
		"DistFromLeftCol",
		"TrimColor",
		"WindowColor",
		"SubFraming",
		"GlassType",
		"Quality",
		"IsBuyout",
		"Weight",
		"Price",
		"IsPriced",
		"ErrorCode",
		"InsulatedGlass",
		"FrameFinish",
		"LocatedInLiner",
		"LeftSteelLine",
		"PartitionNumber",
		"WindowCategory",
		"InsulationRetainerKit",
		"CWindowRating",
		"WindowSize",
		"BracedBay",
		"IsDelete",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"ProjectId",
		"IncludeFramedOpening",
		"IsLocate",
		"TrimColorValsparCode",
		"TrimColorSpecialName")
	SELECT
		NewBuildingInformationId,
		aw."Quantity",
		aw."Elevation",
		aw."BayNumber",
		aw."Type",
		aw."SillHeight",
		aw."HeaderHeight",
		aw."Width",
		aw."DistFromLeftCorner",
		aw."DistFromLeftCol",
		aw."TrimColor",
		aw."WindowColor",
		aw."SubFraming",
		aw."GlassType",
		aw."Quality",
		aw."IsBuyout",
		aw."Weight",
		aw."Price",
		aw."IsPriced",
		aw."ErrorCode",
		aw."InsulatedGlass",
		aw."FrameFinish",
		aw."LocatedInLiner",
		aw."LeftSteelLine",
		aw."PartitionNumber",
		aw."WindowCategory",
		aw."InsulationRetainerKit",
		aw."CWindowRating",
		aw."WindowSize",
		aw."BracedBay",
		aw."IsDelete",
		UserDetailId,
		CURRENT_TIMESTAMP,
		aw."IpAddress",
		OutputId,
		aw."IncludeFramedOpening",
		aw."IsLocate",
		aw."TrimColorValsparCode",
		aw."TrimColorSpecialName"
	FROM "Accesories_Windows" aw
    WHERE NVL("IsDelete", 'N') = 'N' AND aw."BuildingNumber" = x_2 AND aw."ProjectId" = x_1;
	INSERT INTO "Accessories_WalkDoors"(
		"ProjectId",
		"BuildingId",
		"Quantity",
		"Elevation",
		"BayNumber",
		"Type",
		"HeaderHeight",
		"Width",
		"DistFromLeftCorner",
		"DistFromLeftCol",
		"TrimColor",
		"DoorColor",
		"SwingDirection",
		"LatchGuard",
		"SubFraming",
		"Skin",
		"Lite",
		"Closer",
		"Locktype",
		"Quality",
		"LeafType",
		"StyleSet",
		"IsBuyout",
		"Weight",
		"Price",
		"IsPriced",
		"ErrorCode",
		"KnockDown",
		"Style",
		"WindRated",
		"Size",
		"KeyedAlike",
		"PanicHardware",
		"ChainStop",
		"Insulated",
		"FloridaApproval",
		"LocatedInLiner",
		"Glazing",
		"KickPlate",
		"LeftSteelLine",
		"PartitionNumber",
		"LocateRightSideBay",
		"DistanceFromFloor",
		"DadeBrowardApproved",
		"SsbHinges",
		"AddAnchors",
		"LeafInsulated",
		"LeafsBothActive",
		"Alabel3hour",
		"AdaCompliant",
		"AdditionalAnchorsQty",
		"TrimColorValsparCode",
		"TrimColorSpecialName",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"Gauge",
		"FireRated",
		"InterChangeableLockKit",
		"ExistingOpeningMasonryAnchor",
		"InActiveLeaf",
		"WireMasonryAnchor",
		"Masonry",
		"AnodizedFrame",
		"DoorGlass",
		"Glass",
		"Closure",
		"MasonaryApplication",
		"BottomRail",
		"IsLocate",
		"LocateLeftSideBay")
	SELECT
		OutputId,
		NewBuildingInformationId,
		awd."Quantity",
		awd."Elevation",
		awd."BayNumber",
		awd."Type",
		awd."HeaderHeight",
		awd."Width",
		awd."DistFromLeftCorner",
		awd."DistFromLeftCol",
		awd."TrimColor",
		awd."DoorColor",
		awd."SwingDirection",
		awd."LatchGuard",
		awd."SubFraming",
		awd."Skin",
		awd."Lite",
		awd."Closer",
		awd."Locktype",
		awd."Quality",
		awd."LeafType",
		awd."StyleSet",
		awd."IsBuyout",
		awd."Weight",
		awd."Price",
		awd."IsPriced",
		awd."ErrorCode",
		awd."KnockDown",
		awd."Style",
		awd."WindRated",
		awd."Size",
		awd."KeyedAlike",
		awd."PanicHardware",
		awd."ChainStop",
		awd."Insulated",
		awd."FloridaApproval",
		awd."LocatedInLiner",
		awd."Glazing",
		awd."KickPlate",
		awd."LeftSteelLine",
		awd."PartitionNumber",
		awd."LocateRightSideBay",
		awd."DistanceFromFloor",
		awd."DadeBrowardApproved",
		awd."SsbHinges",
		awd."AddAnchors",
		awd."LeafInsulated",
		awd."LeafsBothActive",
		awd."Alabel3hour",
		awd."AdaCompliant",
		awd."AdditionalAnchorsQty",
		awd."TrimColorValsparCode",
		awd."TrimColorSpecialName",
		UserDetailId,
		CURRENT_TIMESTAMP,
		awd."IpAddress",
		awd."IsDelete",
		awd."Gauge",
		awd."FireRated",
		awd."InterChangeableLockKit",
		awd."ExistingOpeningMasonryAnchor",
		awd."InActiveLeaf",
		awd."WireMasonryAnchor",
		awd."Masonry",
		awd."AnodizedFrame",
		awd."DoorGlass",
		awd."Glass",
		awd."Closure",
		awd."MasonaryApplication",
		awd."BottomRail",
		awd."IsLocate",
		awd."LocateLeftSideBay"
	FROM "Accessories_WalkDoors" awd
    WHERE NVL("IsDelete", 'N') = 'N' AND awd."BuildingId" = x_2 AND awd."ProjectId" = x_1;
	INSERT INTO "Accesories_TopMountedSlideDoor"(
		"BuildingNumber",
		"Elevation",
		"BayNumber",
		"Material",
		"Type",
		"Width",
		"Height",
		"DistFromLeftCorner",
		"DistFromLeftCol",
		"HeaderHeight",
		"TrimColor",
		"JambType",
		"CeeDepth",
		"InsideFlangeWidth",
		"InsideFlangeThick",
		"OutsideFlangeWidth",
		"OutsideFlangeThick",
		"WebDepth",
		"WebThick",
		"DoubleJambs",
		"TrimOnly",
		"PanelCredit",
		"Clearance",
		"Slide",
		"Direction",
		"HoodFlash",
		"Weight",
		"Price",
		"IsPriced",
		"ErrorCode",
		"Quantity",
		"LeftSteelLine",
		"PartitionNumber",
		"LocateRightSideBay",
		"TrimColorValsparCode",
		"TrimColorSpecialName",
		"IsBuyout",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"ProjectId",
		"DoorSizeId")
	SELECT
		NewBuildingInformationId,
		atmsd."Elevation",
		atmsd."BayNumber",
		atmsd."Material",
		atmsd."Type",
		atmsd."Width",
		atmsd."Height",
		atmsd."DistFromLeftCorner",
		atmsd."DistFromLeftCol",
		atmsd."HeaderHeight",
		atmsd."TrimColor",
		atmsd."JambType",
		atmsd."CeeDepth",
		atmsd."InsideFlangeWidth",
		atmsd."InsideFlangeThick",
		atmsd."OutsideFlangeWidth",
		atmsd."OutsideFlangeThick",
		atmsd."WebDepth",
		atmsd."WebThick",
		atmsd."DoubleJambs",
		atmsd."TrimOnly",
		atmsd."PanelCredit",
		atmsd."Clearance",
		atmsd."Slide",
		atmsd."Direction",
		atmsd."HoodFlash",
		atmsd."Weight",
		atmsd."Price",
		atmsd."IsPriced",
		atmsd."ErrorCode",
		atmsd."Quantity",
		atmsd."LeftSteelLine",
		atmsd."PartitionNumber",
		atmsd."LocateRightSideBay",
		atmsd."TrimColorValsparCode",
		atmsd."TrimColorSpecialName",
		atmsd."IsBuyout",
		UserDetailId,
		CURRENT_TIMESTAMP,
		atmsd."IpAddress",
		atmsd."IsDelete",
		OutputId,
		atmsd."DoorSizeId"
	FROM "Accesories_TopMountedSlideDoor" atmsd
    WHERE NVL("IsDelete", 'N') = 'N' AND atmsd."BuildingNumber" = x_2 AND atmsd."ProjectId" = x_1;
	INSERT INTO "Accessories_DBCIDoor"(
		"ProjectId",
		"BuildingId",
		"BayNumber",
		"Quantity",
		"Elevation",
		"DistFromLeftCorner",
		"DistFromLeftCol",
		"DoorSeries",
		"DoorSize",
		"DoorColor",
		"Width",
		"Heigth",
		"ResistWind",
		"Insulated",
		"LockType",
		"LocateInLiner",
		"Seal",
		"OperatorType",
		"RemoteTransmitter",
		"Hood",
		"Weigth",
		"Price",
		"IsPriced",
		"LeftSteelLine",
		"PartitionNumber",
		"DistFromFloor",
		"CoverTrim",
		"ColorValsparCode",
		"ColorSpecialName",
		"PreGalvanizedFraming",
		"ClipAttachment",
		"IpAddress",
		"IsDelete",
		"CreatedBy",
		"CreatedDate",
		"TrimColor",
		"Type",
		"TrimColorValsparCode",
		"TrimColorSpecialName",
		"SillHeight",
		"ErrorCode")
	SELECT
		OutputId,
		NewBuildingInformationId,
		adbd."BayNumber",
		adbd."Quantity",
		adbd."Elevation",
		adbd."DistFromLeftCorner",
		adbd."DistFromLeftCol",
		adbd."DoorSeries",
		adbd."DoorSize",
		adbd."DoorColor",
		adbd."Width",
		adbd."Heigth",
		adbd."ResistWind",
		adbd."Insulated",
		adbd."LockType",
		adbd."LocateInLiner",
		adbd."Seal",
		adbd."OperatorType",
		adbd."RemoteTransmitter",
		adbd."Hood",
		adbd."Weigth",
		adbd."Price",
		adbd."IsPriced",
		adbd."LeftSteelLine",
		adbd."PartitionNumber",
		adbd."DistFromFloor",
		adbd."CoverTrim",
		adbd."ColorValsparCode",
		adbd."ColorSpecialName",
		adbd."PreGalvanizedFraming",
		adbd."ClipAttachment",
		adbd."IpAddress",
		adbd."IsDelete",
		UserDetailId,
		CURRENT_TIMESTAMP,
		adbd."TrimColor",
		adbd."Type",
		adbd."TrimColorValsparCode",
		adbd."TrimColorSpecialName",
		adbd."SillHeight",
		adbd."ErrorCode"
	FROM "Accessories_DBCIDoor" adbd
    WHERE NVL("IsDelete", 'N') = 'N' AND adbd."BuildingId" = x_2 AND adbd."ProjectId" = x_1;
	INSERT INTO "Accessories_Louvers"(
		"ProjectId",
		"BuildingId",
		"Quantity",
		"Elevation",
		"BayNumber",
		"SillHeight",
		"HeaderHeight",
		"Width",
		"DistFromLeftCorner",
		"DistFromLeftCol",
		"TrimColor",
		"LouverColor",
		"SubFraming",
		"Type",
		"LouverSize",
		"LocatedInLiner",
		"IncludeFramedOpening",
		"RunOfLouvers",
		"PartitionNumber",
		"BracedBay",
		"LouverColorValsparCode",
		"LouverColorSpecialName",
		"IpAddress",
		"IsDelete",
		"CreatedBy",
		"CreatedDate",
		"TrimColorValsparCode",
		"TrimColorSpecialName",
		"Quality",
		"WallExhausterPowerSource",
		"LouverWeight",
		"LouverPrice",
		"WallExhausterWeight",
		"WallExhausterPrice",
		"LouverIsPriced",
		"LouverErrorCode",
		"WallExhausterIsPriced",
		"WallExhausterErrorCode")
	SELECT
		OutputId,
		NewBuildingInformationId,
		al."Quantity",
		al."Elevation",
		al."BayNumber",
		al."SillHeight",
		al."HeaderHeight",
		al."Width",
		al."DistFromLeftCorner",
		al."DistFromLeftCol",
		al."TrimColor",
		al."LouverColor",
		al."SubFraming",
		al."Type",
		al."LouverSize",
		al."LocatedInLiner",
		al."IncludeFramedOpening",
		al."RunOfLouvers",
		al."PartitionNumber",
		al."BracedBay",
		al."LouverColorValsparCode",
		al."LouverColorSpecialName",
		al."IpAddress",
		al."IsDelete",
		UserDetailId,
		CURRENT_TIMESTAMP,
		al."TrimColorValsparCode",
		al."TrimColorSpecialName",
		al."Quality",
		al."WallExhausterPowerSource",
		al."LouverWeight",
		al."LouverPrice",
		al."WallExhausterWeight",
		al."WallExhausterPrice",
		al."LouverIsPriced",
		al."LouverErrorCode",
		al."WallExhausterIsPriced",
		al."WallExhausterErrorCode"
	FROM "Accessories_Louvers" al
    WHERE NVL("IsDelete", 'N') = 'N' AND al."BuildingId" = x_2 AND al."ProjectId" = x_1;
	INSERT INTO "Accessories_FramedOpening"(
		"BuildingNumber",
		"ProjectId",
		"Elevation",
		"BayNumber",
		"Material",
		"Type",
		"Width",
		"Height",
		"DistFromLeftCorner",
		"DistFromLeftCol",
		"SillHeight",
		"HeaderHeight",
		"HeaderType",
		"JambType",
		"CeeDepth",
		"InsideFlangeWidth",
		"InsideFlangeThick",
		"OutsideFlangeWidth",
		"OutsideFlangeThick",
		"WebDepth",
		"WebThick",
		"DoubleJambs",
		"FourSided",
		"TrimOnly",
		"PanelCredit",
		"Clearance",
		"Weight",
		"Price",
		"IsPriced",
		"ErrorCode",
		"ClosureTrim",
		"ClosureTrimSize",
		"ClosureTrimColor",
		"ClosureTrimColorValsparCode",
		"ClosureTrimColorSpecialName",
		"DoNotCutGirts",
		"OverheadDoor",
		"Quantity",
		"PreGalvanizedFraming",
		"FullCoverHeadTrim",
		"DoubleHeader",
		"DoNotCutPanel",
		"LocatedInLiner",
		"LeftSteelLine",
		"PartitionNumber",
		"ClipAttachment",
		"BracingBay",
		"CreatedBy",
		"CreatedDate",
		"IsDelete",
		"IpAddress",
		"ForVerticalLiftDoor")
	SELECT
		NewBuildingInformationId,
		OutputId,
		afo."Elevation",
		afo."BayNumber",
		afo."Material",
		afo."Type",
		afo."Width",
		afo."Height",
		afo."DistFromLeftCorner",
		afo."DistFromLeftCol",
		afo."SillHeight",
		afo."HeaderHeight",
		afo."HeaderType",
		afo."JambType",
		afo."CeeDepth",
		afo."InsideFlangeWidth",
		afo."InsideFlangeThick",
		afo."OutsideFlangeWidth",
		afo."OutsideFlangeThick",
		afo."WebDepth",
		afo."WebThick",
		afo."DoubleJambs",
		afo."FourSided",
		afo."TrimOnly",
		afo."PanelCredit",
		afo."Clearance",
		afo."Weight",
		afo."Price",
		afo."IsPriced",
		afo."ErrorCode",
		afo."ClosureTrim",
		afo."ClosureTrimSize",
		afo."ClosureTrimColor",
		afo."ClosureTrimColorValsparCode",
		afo."ClosureTrimColorSpecialName",
		afo."DoNotCutGirts",
		afo."OverheadDoor",
		afo."Quantity",
		afo."PreGalvanizedFraming",
		afo."FullCoverHeadTrim",
		afo."DoubleHeader",
		afo."DoNotCutPanel",
		afo."LocatedInLiner",
		afo."LeftSteelLine",
		afo."PartitionNumber",
		afo."ClipAttachment",
		afo."BracingBay",
		UserDetailId,
		CURRENT_TIMESTAMP,
		afo."IsDelete",
		afo."IpAddress",
		afo."ForVerticalLiftDoor"
	FROM "Accessories_FramedOpening" afo
    WHERE NVL("IsDelete", 'N') = 'N' AND afo."BuildingNumber" = x_2 AND afo."ProjectId" = x_1;
	INSERT INTO "Accessories_Liners"(
		"BuildingNumber",
		"ProjectId",
		"Elevation",
		"BayNumber",
		"DistFromLeftCorner",
		"DistFromLeftCol",
		"FullHeight",
		"Height",
		"Length",
		"PanelType",
		"PanelGauge",
		"PanelColor",
		"JambTrim",
		"FramedOpeningTrim",
		"CapTrim",
		"ColTrim",
		"BaseAngle",
		"SheetAngle",
		"BaseChannel",
		"Weight",
		"Price",
		"IsPriced",
		"ErrorCode",
		"FlashColor",
		"OptionalLinerFlash",
		"BaseType",
		"CapTrimColor",
		"PurlinTrimColor",
		"InsideCornerTrimColor",
		"ColumnTieTrimColor",
		"RidgeTrimGauge",
		"RidgeTrimFinish",
		"RidgeTrimColor",
		"RafterTieTrimGauge",
		"RafterTieTrimFinish",
		"RafterTieTrimColor",
		"EaveToWallTrimGauge",
		"EaveToWallTrimFinish",
		"EaveToWallTrimColor",
		"PanelFinish",
		"Width",
		"LinerCoverage",
		"StartColumn",
		"StopColumn",
		"XFrom",
		"XTo",
		"YFrom",
		"YTo",
		"ReverseRoll",
		"WeightMBCI",
		"PriceMBCI",
		"TopTermination",
		"PartitionNumber",
		"FullLength",
		"GirtNote",
		"FastenerHeadFinish",
		"FastenerLength",
		"PanelColorValsparCode",
		"PanelColorSpecialName",
		"FlashColorValsparCode",
		"FlashColorSpecialName",
		"CapTrimColorValsparCode",
		"CapTrimColorSpecialName",
		"PurlinTrimColorValsparCode",
		"PurlinTrimColorSpecialName",
		"InsideCornerTrimColorValsparCode",
		"InsideCornerTrimColorSpecialName",
		"ColumnTieTrimColorValsparCode",
		"ColumnTieTrimColorSpecialName",
		"RidgeTrimColorValsparCode",
		"RidgeTrimColorSpecialName",
		"RafterTieTrimColorValsparCode",
		"RafterTieTrimColorSpecialName",
		"EaveToWallTrimColorValsparCode",
		"EaveToWallTrimColorSpecialName",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"Qty")
	SELECT
		NewBuildingInformationId,
		OutputId,
		alr."Elevation",
		alr."BayNumber",
		alr."DistFromLeftCorner",
		alr."DistFromLeftCol",
		alr."FullHeight",
		alr."Height",
		alr."Length",
		alr."PanelType",
		alr."PanelGauge",
		alr."PanelColor",
		alr."JambTrim",
		alr."FramedOpeningTrim",
		alr."CapTrim",
		alr."ColTrim",
		alr."BaseAngle",
		alr."SheetAngle",
		alr."BaseChannel",
		alr."Weight",
		alr."Price",
		alr."IsPriced",
		alr."ErrorCode",
		alr."FlashColor",
		alr."OptionalLinerFlash",
		alr."BaseType",
		alr."CapTrimColor",
		alr."PurlinTrimColor",
		alr."InsideCornerTrimColor",
		alr."ColumnTieTrimColor",
		alr."RidgeTrimGauge",
		alr."RidgeTrimFinish",
		alr."RidgeTrimColor",
		alr."RafterTieTrimGauge",
		alr."RafterTieTrimFinish",
		alr."RafterTieTrimColor",
		alr."EaveToWallTrimGauge",
		alr."EaveToWallTrimFinish",
		alr."EaveToWallTrimColor",
		alr."PanelFinish",
		alr."Width",
		alr."LinerCoverage",
		alr."StartColumn",
		alr."StopColumn",
		alr."XFrom",
		alr."XTo",
		alr."YFrom",
		alr."YTo",
		alr."ReverseRoll",
		alr."WeightMBCI",
		alr."PriceMBCI",
		alr."TopTermination",
		alr."PartitionNumber",
		alr."FullLength",
		alr."GirtNote",
		alr."FastenerHeadFinish",
		alr."FastenerLength",
		alr."PanelColorValsparCode",
		alr."PanelColorSpecialName",
		alr."FlashColorValsparCode",
		alr."FlashColorSpecialName",
		alr."CapTrimColorValsparCode",
		alr."CapTrimColorSpecialName",
		alr."PurlinTrimColorValsparCode",
		alr."PurlinTrimColorSpecialName",
		alr."InsideCornerTrimColorValsparCode",
		alr."InsideCornerTrimColorSpecialName",
		alr."ColumnTieTrimColorValsparCode",
		alr."ColumnTieTrimColorSpecialName",
		alr."RidgeTrimColorValsparCode",
		alr."RidgeTrimColorSpecialName",
		alr."RafterTieTrimColorValsparCode",
		alr."RafterTieTrimColorSpecialName",
		alr."EaveToWallTrimColorValsparCode",
		alr."EaveToWallTrimColorSpecialName",
		UserDetailId,
		CURRENT_TIMESTAMP,
		alr."IpAddress",
		alr."IsDelete",
		alr."Qty"
	FROM "Accessories_Liners" alr
    WHERE NVL("IsDelete", 'N') = 'N' AND alr."BuildingNumber" = x_2 AND alr."ProjectId" = x_1;
	INSERT INTO "SupportBeams"(
		"BuildingNumber",
		"Elevation",
		"BeamStartCol",
		"BeamStopCol",
		"BeamHeight",
		"BeamFlanges",
		"BeamWebThick",
		"BeamWebDepth",
		"BeamFlangeThick",
		"BeamFlangeWidth",
		"MaterialWeight",
		"MaterialThickness",
		"BeamDeflection",
		"BeamAttachmentSpacing",
		"BeamSteelline",
		"BeamSection",
		"BeamWeight",
		"BeamPrice",
		"BeamIsPriced",
		"BeamErrorCode",
		"IsDelete",
		"IpAddress",
		"CreatedBy",
		"CreatedDate")
	SELECT
		NewBuildingInformationId,
		sb."Elevation",
		sb."BeamStartCol",
		sb."BeamStopCol",
		sb."BeamHeight",
		sb."BeamFlanges",
		sb."BeamWebThick",
		sb."BeamWebDepth",
		sb."BeamFlangeThick",
		sb."BeamFlangeWidth",
		sb."MaterialWeight",
		sb."MaterialThickness",
		sb."BeamDeflection",
		sb."BeamAttachmentSpacing",
		sb."BeamSteelline",
		sb."BeamSection",
		sb."BeamWeight",
		sb."BeamPrice",
		sb."BeamIsPriced",
		sb."BeamErrorCode",
		sb."IsDelete",
		sb."IpAddress",
		UserDetailId,
		CURRENT_TIMESTAMP
	FROM "SupportBeams" sb
    WHERE NVL("IsDelete", 'N') = 'N' AND sb."BuildingNumber" = x_2;
	INSERT INTO "Accesories_PurlinExtensions"(
		"ProjectId",
		"BuildingNumber",
		"Elevation",
		"DistanceFromLeftCorner",
		"StartCol",
		"StopCol",
		"Projection",
		"BuildingWidth",
		"SoffitPanelType",
		"SoffitPanelGauge",
		"SoffitPanelColor",
		"SoffitPanelColorSpecialName",
		"SoffitPanelColorValsparCode",
		"SoffitTrimColor",
		"SoffitTrimColorSpecialName",
		"SoffitTrimColorSpecialCode",
		"IsInsulated",
		"SoffixFacingSpecial",
		"ReverseRollSoffit",
		"SoffitFacingWeight",
		"SoffitFacingDeflection",
		"IsDelete",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"WeightMBCI",
		"Weight",
		"Price",
		"PriceMBCI",
		"DesignIndex",
		"ErrorCode")
	SELECT
		OutputId,
		NewBuildingInformationId,
		ape."Elevation",
		ape."DistanceFromLeftCorner",
		ape."StartCol",
		ape."StopCol",
		ape."Projection",
		ape."BuildingWidth",
		ape."SoffitPanelType",
		ape."SoffitPanelGauge",
		ape."SoffitPanelColor",
		ape."SoffitPanelColorSpecialName",
		ape."SoffitPanelColorValsparCode",
		ape."SoffitTrimColor",
		ape."SoffitTrimColorSpecialName",
		ape."SoffitTrimColorSpecialCode",
		ape."IsInsulated",
		ape."SoffixFacingSpecial",
		ape."ReverseRollSoffit",
		ape."SoffitFacingWeight",
		ape."SoffitFacingDeflection",
		ape."IsDelete",
		UserDetailId,
		CURRENT_TIMESTAMP,
		ape."IpAddress",
		ape."WeightMBCI",
		ape."Weight",
		ape."Price",
		ape."PriceMBCI",
		ape."DesignIndex",
		ape."ErrorCode"
	FROM "Accesories_PurlinExtensions" ape
    WHERE NVL("IsDelete", 'N') = 'N' AND ape."BuildingNumber" = x_2;
	INSERT INTO "Accessories_Canopy"(
		"BuildingNumber",
		"Select_Elevation",
		"StartColumn",
		"StopColumn",
		"CanopyType",
		"Projection",
		"Slope",
		"Panel",
		"SoffitPanelColor",
		"SoffitGaudge",
		"ReturnDownspouts",
		"Gutter",
		"RoofTieTrimColor",
		"CanopyCornerTrimColor",
		"CanopySillCapTrimColor",
		"SoffitTrimColor",
		"SoffitPanelType",
		"CanopyPanelColor",
		"CanopyPanelGauge",
		"CanopySSClipType",
		"ThermalBlockType",
		"ExtendRoofInsulation",
		"GutterType",
		"GutterSize",
		"DownspoutDrops",
		"IncludeElbow",
		"DownspoutHeight",
		"GutterColor",
		"DownspoutColor",
		"SoffitFramingClearance",
		"HasSnowRetentionSystem",
		"IncludeSnowClipPerPanel",
		"SnowClipQuantity",
		"ColorStripQuantity",
		"RoofPanelType",
		"ReverseRollSoffit",
		"ReverseRollFace",
		"DistFromLeftCorner",
		"Length",
		"HeightLocation",
		"SoffitPanel",
		"SoffitTrim",
		"AtEave",
		"PanelFinish",
		"CanopyFacingSpecial",
		"CanopyFacingWeight",
		"CanopyFacingDeflection",
		"SoffitFacingSpecial",
		"SoffitFacingWeight",
		"SoffitFacingDeflection",
		"Price",
		"Weight",
		"ErrorCode",
		"PriceMBCI",
		"WeightMBCI",
		"DesignIndex",
		"MainBuildingGutter",
		"RoofSquareFeet",
		"WallSquareFeet",
		"SoffitSquareFeet",
		"HeightOfFace",
		"SoffitPanelColorValsparCode",
		"SoffitPanelColorSpecialName",
		"RoofTieTrimColorValsparCode",
		"RoofTieTrimColorSpecialName",
		"CanopyCornerTrimColorValsparCode",
		"CanopyCornerTrimColorSpecialName",
		"CanopySillTrimColorValsparCode",
		"CanopySillTrimColorSpecialName",
		"SoffitTrimColorValsparCode",
		"SoffitTrimColorSpecialName",
		"PanelColorValsparCode",
		"PanelColorSpecialName",
		"GutterColorValsparCode",
		"GutterColorSpecialName",
		"DownspoutColorValsparCode",
		"DownspoutColorSpecialName",
		"IncludeSagAngles",
		"SnowLoad",
		"CreatedDate",
		"CreatedBy",
		"IpAddress",
		"IsDelete",
		"ProjectId",
		"SoffitPanelColorValsparText",
		"SoffitPanelColorValsparHashCode",
		"RoofTieTrimColorValsparText",
		"RoofTieTrimColorValsparHashCode",
		"CanopyCornerTrimColorValsparText",
		"CanopyCornerTrimColorValsparHashCode",
		"CanopySillCapTrimColorValsparText",
		"CanopySillCapTrimColorValsparHashCode",
		"SoffitTrimColorValsparText",
		"SoffitTrimColorValsparHashCode",
		"PanelColorValsparText",
		"PanelColorValsparHashCode",
		"GutterColorValsparText",
		"GutterColorValsparHashCode",
		"DownspoutColorValsparText",
		"DownspoutColorValsparHashCode",
		"IsValid")
	SELECT
		NewBuildingInformationId,
		ac."Select_Elevation",
		ac."StartColumn",
		ac."StopColumn",
		ac."CanopyType",
		ac."Projection",
		ac."Slope",
		ac."Panel",
		ac."SoffitPanelColor",
		ac."SoffitGaudge",
		ac."ReturnDownspouts",
		ac."Gutter",
		ac."RoofTieTrimColor",
		ac."CanopyCornerTrimColor",
		ac."CanopySillCapTrimColor",
		ac."SoffitTrimColor",
		ac."SoffitPanelType",
		ac."CanopyPanelColor",
		ac."CanopyPanelGauge",
		ac."CanopySSClipType",
		ac."ThermalBlockType",
		ac."ExtendRoofInsulation",
		ac."GutterType",
		ac."GutterSize",
		ac."DownspoutDrops",
		ac."IncludeElbow",
		ac."DownspoutHeight",
		ac."GutterColor",
		ac."DownspoutColor",
		ac."SoffitFramingClearance",
		ac."HasSnowRetentionSystem",
		ac."IncludeSnowClipPerPanel",
		ac."SnowClipQuantity",
		ac."ColorStripQuantity",
		ac."RoofPanelType",
		ac."ReverseRollSoffit",
		ac."ReverseRollFace",
		ac."DistFromLeftCorner",
		ac."Length",
		ac."HeightLocation",
		ac."SoffitPanel",
		ac."SoffitTrim",
		ac."AtEave",
		ac."PanelFinish",
		ac."CanopyFacingSpecial",
		ac."CanopyFacingWeight",
		ac."CanopyFacingDeflection",
		ac."SoffitFacingSpecial",
		ac."SoffitFacingWeight",
		ac."SoffitFacingDeflection",
		ac."Price",
		ac."Weight",
		ac."ErrorCode",
		ac."PriceMBCI",
		ac."WeightMBCI",
		ac."DesignIndex",
		ac."MainBuildingGutter",
		ac."RoofSquareFeet",
		ac."WallSquareFeet",
		ac."SoffitSquareFeet",
		ac."HeightOfFace",
		ac."SoffitPanelColorValsparCode",
		ac."SoffitPanelColorSpecialName",
		ac."RoofTieTrimColorValsparCode",
		ac."RoofTieTrimColorSpecialName",
		ac."CanopyCornerTrimColorValsparCode",
		ac."CanopyCornerTrimColorSpecialName",
		ac."CanopySillTrimColorValsparCode",
		ac."CanopySillTrimColorSpecialName",
		ac."SoffitTrimColorValsparCode",
		ac."SoffitTrimColorSpecialName",
		ac."PanelColorValsparCode",
		ac."PanelColorSpecialName",
		ac."GutterColorValsparCode",
		ac."GutterColorSpecialName",
		ac."DownspoutColorValsparCode",
		ac."DownspoutColorSpecialName",
		ac."IncludeSagAngles",
		ac."SnowLoad",
		CURRENT_TIMESTAMP,
		UserDetailId,
		ac."IpAddress",
		ac."IsDelete",
		OutputId,
		ac."SoffitPanelColorValsparText",
		ac."SoffitPanelColorValsparHashCode",
		ac."RoofTieTrimColorValsparText",
		ac."RoofTieTrimColorValsparHashCode",
		ac."CanopyCornerTrimColorValsparText",
		ac."CanopyCornerTrimColorValsparHashCode",
		ac."CanopySillCapTrimColorValsparText",
		ac."CanopySillCapTrimColorValsparHashCode",
		ac."SoffitTrimColorValsparText",
		ac."SoffitTrimColorValsparHashCode",
		ac."PanelColorValsparText",
		ac."PanelColorValsparHashCode",
		ac."GutterColorValsparText",
		ac."GutterColorValsparHashCode",
		ac."DownspoutColorValsparText",
		ac."DownspoutColorValsparHashCode",
		ac."IsValid"
	FROM "Accessories_Canopy" ac
    WHERE NVL("IsDelete", 'N') = 'N' AND ac."BuildingNumber" = x_2 AND ac."ProjectId" = x_1;
	INSERT INTO "Accessories_Facade"(
		"ProjectId",
		"BuildingInformationId",
		"Elevation",
		"StartCol",
		"StopCol",
		"DistFromLeftCorner",
		"Length",
		"Type",
		"Projection",
		"Height",
		"Gutter",
		"Slant",
		"PanelType",
		"PanelGauge",
		"PanelFinish",
		"SoffitPanelType",
		"SoffitPanelGauge",
		"SoffitPanelFinish",
		"FacadePanel",
		"SoffitPanel",
		"SoffitElevation",
		"BackPanelType",
		"BackPanelGauge",
		"BackPanelColor",
		"SillCapTrim",
		"CornerTrim",
		"SoffitTrim",
		"FacadeFacingSpecial",
		"FacadeFacingWeight",
		"FacadeFacingDeflection",
		"SoffitFacingSpecial",
		"SoffitFacingWeight",
		"SoffitFacingDeflection",
		"ReverseRollFace",
		"ReverseRollBack",
		"ReverseRollSoffit",
		"PanelFinishValsparCode",
		"PanelFinishSpecialName",
		"SoffitPanelFinishValsparCode",
		"SoffitPanelFinishSpecialName",
		"BackPanelColorValsparCode",
		"BackPanelColorSpecialName",
		"SillCapTrimValsparCode",
		"SillCapTrimSpecialName",
		"CornerTrimValsparCode",
		"CornerTrimSpecialName",
		"SoffitTrimValsparCode",
		"SoffitTrimSpecialName",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"BackupCover",
		"Trim",
		"CornerUnits",
		"EndCaps",
		"Galvanized",
		"LinerPanel",
		"FacadeWeight",
		"FacadePrice",
		"SoffitPanelWeight",
		"SoffitPanelPrice",
		"FacadeIsPriced",
		"FacadeErrorCode",
		"DeductLiner",
		"DeductTrim",
		"SillCapTrimGauge",
		"CornerTrimGauge",
		"SoffitTrimGauge",
		"FacadeWeightMBCI",
		"FacadePriceMBCI",
		"DesignIndex",
		"FaceSquareFeet",
		"BackSquareFeet",
		"SoffitSquareFeet",
		"RoofSquareFeet")
	SELECT
		OutputId,
		NewBuildingInformationId,
		afc."Elevation",
		afc."StartCol",
		afc."StopCol",
		afc."DistFromLeftCorner",
		afc."Length",
		afc."Type",
		afc."Projection",
		afc."Height",
		afc."Gutter",
		afc."Slant",
		afc."PanelType",
		afc."PanelGauge",
		afc."PanelFinish",
		afc."SoffitPanelType",
		afc."SoffitPanelGauge",
		afc."SoffitPanelFinish",
		afc."FacadePanel",
		afc."SoffitPanel",
		afc."SoffitElevation",
		afc."BackPanelType",
		afc."BackPanelGauge",
		afc."BackPanelColor",
		afc."SillCapTrim",
		afc."CornerTrim",
		afc."SoffitTrim",
		afc."FacadeFacingSpecial",
		afc."FacadeFacingWeight",
		afc."FacadeFacingDeflection",
		afc."SoffitFacingSpecial",
		afc."SoffitFacingWeight",
		afc."SoffitFacingDeflection",
		afc."ReverseRollFace",
		afc."ReverseRollBack",
		afc."ReverseRollSoffit",
		afc."PanelFinishValsparCode",
		afc."PanelFinishSpecialName",
		afc."SoffitPanelFinishValsparCode",
		afc."SoffitPanelFinishSpecialName",
		afc."BackPanelColorValsparCode",
		afc."BackPanelColorSpecialName",
		afc."SillCapTrimValsparCode",
		afc."SillCapTrimSpecialName",
		afc."CornerTrimValsparCode",
		afc."CornerTrimSpecialName",
		afc."SoffitTrimValsparCode",
		afc."SoffitTrimSpecialName",
		UserDetailId,
		CURRENT_TIMESTAMP,
		afc."IpAddress",
		afc."IsDelete",
		afc."BackupCover",
		afc."Trim",
		afc."CornerUnits",
		afc."EndCaps",
		afc."Galvanized",
		afc."LinerPanel",
		afc."FacadeWeight",
		afc."FacadePrice",
		afc."SoffitPanelWeight",
		afc."SoffitPanelPrice",
		afc."FacadeIsPriced",
		afc."FacadeErrorCode",
		afc."DeductLiner",
		afc."DeductTrim",
		afc."SillCapTrimGauge",
		afc."CornerTrimGauge",
		afc."SoffitTrimGauge",
		afc."FacadeWeightMBCI",
		afc."FacadePriceMBCI",
		afc."DesignIndex",
		afc."FaceSquareFeet",
		afc."BackSquareFeet",
		afc."SoffitSquareFeet",
		afc."RoofSquareFeet"
	FROM "Accessories_Facade" afc
    WHERE NVL("IsDelete", 'N') = 'N' AND afc."BuildingInformationId" = x_2 AND afc."ProjectId" = x_1;
	INSERT INTO "Accessories_Parapet"(
		"ProjectId",
		"BuildingInformationId",
		"Elevation",
		"StartColumn",
		"StopColumn",
		"DistFromLeftCorner",
		"Height",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"IsPriced",
		"Weight",
		"Price",
		"WeightMBCI",
		"PriceMBCI",
		"StructuralWeight",
		"IsInsulated",
		"DesignIndex",
		"FrontSquareFeet",
		"BackSquareFeet",
		"ErrorCode")
	SELECT
		OutputId,
		NewBuildingInformationId,
		apt."Elevation",
		apt."StartColumn",
		apt."StopColumn",
		apt."DistFromLeftCorner",
		apt."Height",
		UserDetailId,
		CURRENT_TIMESTAMP,
		apt."IpAddress",
		apt."IsDelete",
		apt."IsPriced",
		apt."Weight",
		apt."Price",
		apt."WeightMBCI",
		apt."PriceMBCI",
		apt."StructuralWeight",
		apt."IsInsulated",
		apt."DesignIndex",
		apt."FrontSquareFeet",
		apt."BackSquareFeet",
		apt."ErrorCode"
	FROM "Accessories_Parapet" apt
    WHERE NVL("IsDelete", 'N') = 'N' AND apt."BuildingInformationId" = x_2 AND apt."ProjectId" = x_1;
	INSERT INTO "Accessories_Valleygutters"(
		"BuildingInformationId",
		"ProjectId",
		"Quantity",
		"Length",
		"Weight",
		"Drainage",
		"Price",
		"IsPrice",
		"DownspoutLength",
		"ConductorHeadLocation",
		"IpAddress",
		"IsDelete",
		"CreatedBy",
		"CreatedDate",
		"NewBuilding",
		"Color",
		"ErrorCode")
	SELECT
		NewBuildingInformationId,
		OutputId,
		avgt."Quantity",
		avgt."Length",
		avgt."Weight",
		avgt."Drainage",
		avgt."Price",
		avgt."IsPrice",
		avgt."DownspoutLength",
		avgt."ConductorHeadLocation",
		avgt."IpAddress",
		avgt."IsDelete",
		UserDetailId,
		CURRENT_TIMESTAMP,
		avgt."NewBuilding",
		avgt."Color",
		avgt."ErrorCode"
	FROM "Accessories_Valleygutters" avgt
    WHERE NVL("IsDelete", 'N') = 'N' AND avgt."BuildingInformationId" = x_2 AND avgt."ProjectId" = x_1;
	INSERT INTO "Accesories_Wainscot"(
		"FromColumn",
		"ProjectId",
		"BuildingInformationId",
		"Qty",
		"Hieght",
		"ToColumn",
		"TransitionStyleId",
		"PanelTypeId",
		"PanelThicknessId",
		"PanelColorId",
		"TransitionTrimColorId",
		"Elevation",
		"IpAddress",
		"IsDelete",
		"CreatedBy",
		"CreatedDate")
	SELECT
		awn."FromColumn",
		OutputId,
		NewBuildingInformationId,
		awn."Qty",
		awn."Hieght",
		awn."ToColumn",
		awn."TransitionStyleId",
		awn."PanelTypeId",
		awn."PanelThicknessId",
		awn."PanelColorId",
		awn."TransitionTrimColorId",
		awn."Elevation",
		awn."IpAddress",
		awn."IsDelete",
		UserDetailId,
		CURRENT_TIMESTAMP
	FROM "Accesories_Wainscot" awn
    WHERE NVL("IsDelete", 'N') = 'N' AND awn."BuildingInformationId" = x_2 AND awn."ProjectId" = x_1;
	INSERT INTO "Accessories_Cranes"(
		"ProjectId",
		"BuildingId",
		"StartFrameline",
		"StopFrameLine",
		"SType",
		"Control",
		"Quantity",
		"Tonnage1",
		"Tonnage2",
		"CraneClass",
		"Brackets",
		"RunwayBeam",
		"Rail",
		"RoofSupportBeams",
		"SeperateSupportCol",
		"Stops",
		"Bracing",
		"NameBrand",
		"GirderType",
		"BridgeWeight1",
		"BridgeWeight2",
		"WheelSpacing1",
		"WheelSpacing2",
		"HoistWeight1",
		"HoistWeight2",
		"BracketLength",
		"RunwayBeamSize",
		"DistanceBetweenCranes",
		"CenterlineOfRunwayBeamToSteelline",
		"CenterlineToCenterlineOfRails",
		"ColBaseToTopOfRail",
		"ClearanceFromTopRailToBottomRafter",
		"ClearanceFromRailToInsideFlangeCol",
		"ManufacturerRailSize",
		"TruckWheelDiameter",
		"VerticalDeflection",
		"HorizontalDeflection",
		"FutureLineStart1",
		"FutureLinestart2",
		"DistanceToBack",
		"SteelYield",
		"RailWeight",
		"CecoStandard",
		"ModuleNumber",
		"UsingMfgCraneData",
		"AuxiliaryHoist1",
		"AuxiliaryHoist2",
		"TrolleyType",
		"HoistType",
		"UserAccept",
		"MinimumHookDistance",
		"LeftOverhang1",
		"LeftOverhang2",
		"RightOverhang1",
		"RightOverhang2",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"CraneNumber1",
		"CraneNumber2")
	SELECT
		OutputId,
		NewBuildingInformationId,
		acr."StartFrameline",
		acr."StopFrameLine",
		acr."SType",
		acr."Control",
		acr."Quantity",
		acr."Tonnage1",
		acr."Tonnage2",
		acr."CraneClass",
		acr."Brackets",
		acr."RunwayBeam",
		acr."Rail",
		acr."RoofSupportBeams",
		acr."SeperateSupportCol",
		acr."Stops",
		acr."Bracing",
		acr."NameBrand",
		acr."GirderType",
		acr."BridgeWeight1",
		acr."BridgeWeight2",
		acr."WheelSpacing1",
		acr."WheelSpacing2",
		acr."HoistWeight1",
		acr."HoistWeight2",
		acr."BracketLength",
		acr."RunwayBeamSize",
		acr."DistanceBetweenCranes",
		acr."CenterlineOfRunwayBeamToSteelline",
		acr."CenterlineToCenterlineOfRails",
		acr."ColBaseToTopOfRail",
		acr."ClearanceFromTopRailToBottomRafter",
		acr."ClearanceFromRailToInsideFlangeCol",
		acr."ManufacturerRailSize",
		acr."TruckWheelDiameter",
		acr."VerticalDeflection",
		acr."HorizontalDeflection",
		acr."FutureLineStart1",
		acr."FutureLinestart2",
		acr."DistanceToBack",
		acr."SteelYield",
		acr."RailWeight",
		acr."CecoStandard",
		acr."ModuleNumber",
		acr."UsingMfgCraneData",
		acr."AuxiliaryHoist1",
		acr."AuxiliaryHoist2",
		acr."TrolleyType",
		acr."HoistType",
		acr."UserAccept",
		acr."MinimumHookDistance",
		acr."LeftOverhang1",
		acr."LeftOverhang2",
		acr."RightOverhang1",
		acr."RightOverhang2",
		UserDetailId,
		CURRENT_TIMESTAMP,
		acr."IpAddress",
		acr."IsDelete",
		acr."CraneNumber1",
		acr."CraneNumber2"
	FROM "Accessories_Cranes" acr
    WHERE NVL("IsDelete", 'N') = 'N' AND acr."BuildingId" = x_2 AND acr."ProjectId" = x_1;
	INSERT INTO "EDSPrice_IO_Mezzanines"(
		"BuildingNumber",
		"MezzanineNumber",
		"JoistParallelToPurlins",
		"StartFrameline",
		"StopFrameline",
		"DistFromSW",
		"Width",
		"OpenDistFromSw",
		"OpenDistFromFrameline",
		"OpenWidthAlongEw",
		"OpenLengthAlongSw",
		"Design",
		"Beams",
		"Deck",
		"Joists",
		"SupportColumns",
		"EdgeAngle",
		"FloorThickness",
		"FloorHeight",
		"FloorMaterial",
		"InsideClearBeams",
		"MaxBeamDepth",
		"InsideClearJoists",
		"MaxJoistDepth",
		"JoistShopcoat",
		"JoistWelded",
		"JoistSpacing",
		"DeckType",
		"DeckFinish",
		"DeckFastened",
		"DeckIcboApproval",
		"DeckClosure",
		"LiveLoad",
		"DeadLoad",
		"CollateralLoad",
		"PartitionLoad",
		"QuoteNumber",
		"QuoteYear",
		"EstimatorInitials",
		"ExpiresOn",
		"Expired",
		"NoVendor",
		"PriceStar",
		"WeightStar",
		"PriceBeams",
		"WeightBeams",
		"PriceJoists",
		"WeightJoists",
		"VendorJoists",
		"PriceDeck",
		"WeightDeck",
		"VendorDeck",
		"Vibration",
		"DeckCoverage",
		"HumanActivity",
		"MezzUse",
		"MezzColSpacingSet",
		"StairwellWeight",
		"ClearToRafter",
		"LiveLoadReduction",
		"AttachmentToSupport",
		"AttachmentToSidelap",
		"AttachmentByStarSupport",
		"AttachmentByStarSidelap",
		"JoistType",
		"JoistSpacingStandard",
		"JoistSpacingSpecified",
		"IntMezzColumnType",
		"ColumnBaseType",
		"ColumnBaseHeight",
		"JoistSpacingCustom",
		"DeckDescription",
		"DeckFinishWidth",
		"DeckFinishType",
		"DeckFinishGauge",
		"DeckFinishFinish",
		"HideWeightPrice",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"ProjectId")
	SELECT
		NewBuildingInformationId,
		eiom."MezzanineNumber",
		eiom."JoistParallelToPurlins",
		eiom."StartFrameline",
		eiom."StopFrameline",
		eiom."DistFromSW",
		eiom."Width",
		eiom."OpenDistFromSw",
		eiom."OpenDistFromFrameline",
		eiom."OpenWidthAlongEw",
		eiom."OpenLengthAlongSw",
		eiom."Design",
		eiom."Beams",
		eiom."Deck",
		eiom."Joists",
		eiom."SupportColumns",
		eiom."EdgeAngle",
		eiom."FloorThickness",
		eiom."FloorHeight",
		eiom."FloorMaterial",
		eiom."InsideClearBeams",
		eiom."MaxBeamDepth",
		eiom."InsideClearJoists",
		eiom."MaxJoistDepth",
		eiom."JoistShopcoat",
		eiom."JoistWelded",
		eiom."JoistSpacing",
		eiom."DeckType",
		eiom."DeckFinish",
		eiom."DeckFastened",
		eiom."DeckIcboApproval",
		eiom."DeckClosure",
		eiom."LiveLoad",
		eiom."DeadLoad",
		eiom."CollateralLoad",
		eiom."PartitionLoad",
		eiom."QuoteNumber",
		eiom."QuoteYear",
		eiom."EstimatorInitials",
		eiom."ExpiresOn",
		eiom."Expired",
		eiom."NoVendor",
		eiom."PriceStar",
		eiom."WeightStar",
		eiom."PriceBeams",
		eiom."WeightBeams",
		eiom."PriceJoists",
		eiom."WeightJoists",
		eiom."VendorJoists",
		eiom."PriceDeck",
		eiom."WeightDeck",
		eiom."VendorDeck",
		eiom."Vibration",
		eiom."DeckCoverage",
		eiom."HumanActivity",
		eiom."MezzUse",
		eiom."MezzColSpacingSet",
		eiom."StairwellWeight",
		eiom."ClearToRafter",
		eiom."LiveLoadReduction",
		eiom."AttachmentToSupport",
		eiom."AttachmentToSidelap",
		eiom."AttachmentByStarSupport",
		eiom."AttachmentByStarSidelap",
		eiom."JoistType",
		eiom."JoistSpacingStandard",
		eiom."JoistSpacingSpecified",
		eiom."IntMezzColumnType",
		eiom."ColumnBaseType",
		eiom."ColumnBaseHeight",
		eiom."JoistSpacingCustom",
		eiom."DeckDescription",
		eiom."DeckFinishWidth",
		eiom."DeckFinishType",
		eiom."DeckFinishGauge",
		eiom."DeckFinishFinish",
		eiom."HideWeightPrice",
		UserDetailId,
		CURRENT_TIMESTAMP,
		eiom."IpAddress",
		eiom."IsDelete",
		OutputId
	FROM "EDSPrice_IO_Mezzanines" eiom
    WHERE NVL("IsDelete", 'N') = 'N' AND eiom."BuildingNumber" = x_2 AND eiom."ProjectId" = x_1;
	INSERT INTO "EDSPrice_IO_MezzanineSpacing"(
		"BuildingNumber",
		"MezzanineNumber",
		"FramelineNumber",
		"AlltheSame",
		"Spacing1",
		"Spacing2",
		"Spacing3",
		"Spacing4",
		"Spacing5",
		"Spacing6",
		"Spacing7",
		"Spacing8",
		"Spacing9",
		"Spacing10",
		"Spacing11",
		"Spacing12",
		"Spacing13",
		"Spacing14",
		"Spacing15",
		"Spacing16",
		"Spacing17",
		"Spacing18",
		"Spacing19",
		"Spacing20",
		"Spacing21",
		"Spacing22",
		"Spacing23",
		"Spacing24",
		"Spacing25",
		"Spacing26",
		"Spacing27",
		"Spacing28",
		"Spacing29",
		"Spacing30",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"ProjectId"--,
		--"MezzaninesId",
		--"ForLongitudinal"
        )
	SELECT
		NewBuildingInformationId,
		eioms."MezzanineNumber",
		eioms."FramelineNumber",
		eioms."AlltheSame",
		eioms."Spacing1",
		eioms."Spacing2",
		eioms."Spacing3",
		eioms."Spacing4",
		eioms."Spacing5",
		eioms."Spacing6",
		eioms."Spacing7",
		eioms."Spacing8",
		eioms."Spacing9",
		eioms."Spacing10",
		eioms."Spacing11",
		eioms."Spacing12",
		eioms."Spacing13",
		eioms."Spacing14",
		eioms."Spacing15",
		eioms."Spacing16",
		eioms."Spacing17",
		eioms."Spacing18",
		eioms."Spacing19",
		eioms."Spacing20",
		eioms."Spacing21",
		eioms."Spacing22",
		eioms."Spacing23",
		eioms."Spacing24",
		eioms."Spacing25",
		eioms."Spacing26",
		eioms."Spacing27",
		eioms."Spacing28",
		eioms."Spacing29",
		eioms."Spacing30",
		UserDetailId,
		CURRENT_TIMESTAMP,
		eioms."IpAddress",
		eioms."IsDelete",
		OutputId--,
		--eioms."MezzaninesId"--,
		--eioms."ForLongitudinal"
	FROM "EDSPrice_IO_MezzanineSpacing" eioms
    WHERE NVL("IsDelete", 'N') = 'N' AND eioms."BuildingNumber" = x_2 AND eioms."ProjectId" = x_1;
	INSERT INTO "EDSPrice_IO_MezzanineOpening"(
		"BuildingNumber",
		"MezzanineNumber",
		"OpeningNumber",
		"OpenDistFromSw",
		"OpenDistFromFrameline",
		"OpenWidthAlongEw",
		"OpenLengthAlongSw",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"IsDelete",
		"ProjectId"--,
		--"MezzaninesId"
        )
	SELECT
		NewBuildingInformationId,
		eiomo."MezzanineNumber",
		eiomo."OpeningNumber",
		eiomo."OpenDistFromSw",
		eiomo."OpenDistFromFrameline",
		eiomo."OpenWidthAlongEw",
		eiomo."OpenLengthAlongSw",
		UserDetailId,
		CURRENT_TIMESTAMP,
		eiomo."IpAddress",
		eiomo."IsDelete",
		OutputId--,
		--eiomo."MezzaninesId"
	FROM "EDSPrice_IO_MezzanineOpening" eiomo
    WHERE NVL("IsDelete", 'N') = 'N' AND eiomo."BuildingNumber" = x_2 AND eiomo."ProjectId" = x_1;

		DECLARE
		CURSOR c_quote5
		IS
			SELECT
			"apn5"."PartitionId"
		FROM
			"Accesories_Partition" "apn5"
		WHERE
			"apn5"."BuildingNumber" = x_2;
		BEGIN
		FOR r_product5 IN c_quote5
		LOOP
		DECLARE y_5 number;
		BEGIN
				SELECT r_product5."PartitionId"  INTO y_5 FROM dual;    
	INSERT INTO "Accesories_Partition"(
		"BuildingNumber",
		"Type",
		"Length",
		"Height",
		"DistFromEndWall",
		"DistFromSideWall",
		"FullHeight",
		"PanelType",
		"Width",
		"Thickness",
		"ReverseRoll",
		"ExteriorProfile",
		"ExteriorGuage",
		"ExteriorTexture",
		"ExteriorColor",
		"ExteriorColorSpecialName",
		"ExteriorColorValsparCode",
		"InteriorProfile",
		"InteriorGuage",
		"InteriorTexture",
		"InteriorColor",
		"InteriorColorSpecialName",
		"InteriorColorValsparCode",
		"FactoryAppliedSealant",
		"SheeterSide",
		"ExteriorWall",
		"RecessFoundation",
		"BaseClosureStrips",
		"PurlinTrimColor",
		"PurlinTrimColorSpecialName",
		"PurlinTrimColorValsparCode",
		"CornerTrimColor",
		"CornerTrimColorSpecialName",
		"CornerTrimColorValsparCode",
		"FramingByOthers",
		"BaseCondition",
		"FastenerHeadFinish",
		"FastenerLength",
		"GirtSpacing",
		"IsDelete",
		"CreatedBy",
		"CreatedDate",
		"IpAddress",
		"ProjectId",
		"GirtDepth",
		"GirtType",
		"StructuralPrice",
		"Elevation",
		"BaseHeight",
		"DistFromWall",
		"PanelFinish",
		"Weight",
		"Price",
		"IsPriced",
		"ErrorCode",
		"PriceInsulation",
		"InsulationFacing",
		"IMPLoads",
		"IMPPlant",
		"PanelColor",
		"SheetBothSides",
		"ByEstimating",
		"QuoteNumber",
		"QuoteYear",
		"EstimatorInitials",
		"ExpiresOn",
		"Expired",
		"StartLoc",
		"StopLoc",
		"EstPrice",
		"EstWeight",
		"ShowComplete",
		"WeightMBCI",
		"PriceMBCI",
		"StructuralWeight",
		"SquareFeet")
    VALUES(
		NewBuildingInformationId,
		(SELECT apn."Type" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."Length" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."Height" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."DistFromEndWall" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."DistFromSideWall" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."FullHeight" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."PanelType" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."Width" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."Thickness" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."ReverseRoll" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."ExteriorProfile" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."ExteriorGuage" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."ExteriorTexture" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."ExteriorColor" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."ExteriorColorSpecialName" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."ExteriorColorValsparCode" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."InteriorProfile" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."InteriorGuage" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."InteriorTexture" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."InteriorColor" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."InteriorColorSpecialName" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."InteriorColorValsparCode" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."FactoryAppliedSealant" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."SheeterSide" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."ExteriorWall" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."RecessFoundation" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."BaseClosureStrips" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."PurlinTrimColor" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."PurlinTrimColorSpecialName" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."PurlinTrimColorValsparCode" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."CornerTrimColor" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."CornerTrimColorSpecialName" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."CornerTrimColorValsparCode" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."FramingByOthers" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."BaseCondition" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."FastenerHeadFinish" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."FastenerLength" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."GirtSpacing" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."IsDelete" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		UserDetailId,
		CURRENT_TIMESTAMP,
		(SELECT apn."IpAddress" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		OutputId,
		(SELECT apn."GirtDepth" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."GirtType" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."StructuralPrice" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."Elevation" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."BaseHeight" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."DistFromWall" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."PanelFinish" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."Weight" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."Price" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."IsPriced" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."ErrorCode" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."PriceInsulation" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."InsulationFacing" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."IMPLoads" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."IMPPlant" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."PanelColor" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."SheetBothSides" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."ByEstimating" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."QuoteNumber" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."QuoteYear" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."EstimatorInitials" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."ExpiresOn" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."Expired" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."StartLoc" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."StopLoc" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."EstPrice" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."EstWeight" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."ShowComplete" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."WeightMBCI" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."PriceMBCI" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."StructuralWeight" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5),
		(SELECT apn."SquareFeet" FROM "Accesories_Partition" apn WHERE NVL("IsDelete", 'N') = 'N' AND apn."PartitionId" = y_5)) returning "PartitionId" INTO NewPartitionId;
	INSERT INTO "Accesories_PartitionGirtSpacing"(
		"PartitionId",
		"Width")
	SELECT
		NewPartitionId,
		apg."Width"
	FROM "Accesories_PartitionGirtSpacing" apg
	WHERE apg."PartitionId" = y_5;
	INSERT INTO "Accesories_PartitionModuleSpacing"(
		"PartitionId",
		"Width",
		"BayNumber",
		"BuildingNumber")
	SELECT
		NewPartitionId,
		apm."Width",
		apm."BayNumber",
		apm."BuildingNumber"
	FROM "Accesories_PartitionModuleSpacing" apm
	WHERE apm."PartitionId" = y_5;

    END;
      END LOOP;
    END;
END;
    END LOOP;
END;
END Quote_Management;
/