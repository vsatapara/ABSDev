CREATE OR REPLACE PROCEDURE abs_mdi."DEFLECTIONS_GETBYBUILDINGID" 
(
    BuildingId IN VARCHAR2,
    OUTPUT_TABLE OUT  SYS_REFCURSOR
)
AS
BEGIN
OPEN OUTPUT_TABLE FOR SELECT
    "DeflectionId",
    "ProjectId",
    "BuildingNumber",
    "PurlinsLive",
    "PurlinsSnow",
    "PurlinsWind",
    "PurlinsGravity",
    "PurlinsUplift",
    "RaftersLive",
    "RaftersSnow",
    "RaftersWind",
    "RaftersGravity",
    "RaftersUplift",
    "WallGirts",
    "WallCol",
    "WallWind",
    "RoofLive",
    "RoofSnow",
    "RoofWind",
    "RoofGravity",
    "RoofUplift",
    "FrameLive",
    "FrameSnow",
    "FrameWind",
    "FrameSeismic",
    "FrameCrane",
    "FrameTotalWind",
    "FrameTotalSeismic",
    "FrameTotalGravity",
    "FramePortalWind",
    "FramePortalSeismic",
    "SuspendedCeiling",
    "FaceBrickWall",
    "DryvitFinish",
    "PurlinsLiveFlag",
    "PurlinsSnowFlag",
    "PurlinsWindFlag",
    "PurlinsGravityFlag",
    "PurlinsUpliftFlag",
    "RaftersLiveFlag",
    "RaftersSnowFlag",
    "RaftersWindFlag",
    "RaftersGravityFlag",
    "RaftersUpliftFlag",
    "WallGirtsFlag",
    "WallColFlag",
    "WallWindFlag",
    "RoofLiveFlag",
    "RoofSnowFlag",
    "RoofWindFlag",
    "RoofGravityFlag",
    "RoofUpliftFlag",
    "FrameLiveFlag",
    "FrameSnowFlag",
    "FrameWindFlag",
    "FrameSeismicFlag",
    "FrameCraneFlag",
    "FrameTotalWindFlag",
    "FrameTotalSeismicFlag",
    "FrameTotalGravityFlag",
    "FramePortalWindFlag",
    "FramePortalSeismicFlag",
    "RoofPanelLive",
    "RoofPanelSnow",
    "RoofPanelWind",
    "RoofPanelGravity",
    "RoofPanelUplift",
    "WallPanel",
    "RoofPanelLiveFlag",
    "RoofPanelSnowFlag",
    "RoofPanelWindFlag",
    "RoofPanelGravityFlag",
    "RoofPanelUpliftFlag",
    "WallPanelFlag",
    "UserAccept",
    "AdvFrames",
    "AdvPurlins",
    "AdvRafters",
    "TempInteger1",
    "TempInteger2",
    "TempInteger3",
    "TempDouble1",
    "TempDouble2",
    "TempDouble3",
    "TempString1",
    "TempString2",
    "TempString3",
    "CreatedBy",
    "CreatedDate",
    "ModifiedBy",
    "ModifiedDate",
    "IpAddress",
    "IsDeleted"
FROM
    "Deflections"
    WHERE 
           "BuildingNumber" in
           ( 
                                SELECT regexp_substr(BuildingId,'[^,]+', 1, level) from dual
                                connect by regexp_substr(BuildingId, '[^,]+', 1, level) is not null
            )
            AND ("IsDeleted" IS NULL  OR "IsDeleted" != 'Y');
END;
/